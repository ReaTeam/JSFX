desc:ADSR library

//_____________________________________________________________________
@init
//_____________________________________________________________________
//                    Static ressources & tables for all ADSR "objects"
function ADSR()
  local() (
  ADSR_time_coef = 2.71 / (srate/KRATE);
  0;   // minimal empty function may return a number.
);

//_____________________________________________________________________
//                                              Init of a ADSR instance
function ADSR_set(A D S R) (
  A > 0 ?
    this.A = ADSR_time_coef / A
  : this.A = 1;
  this.A = min(this.A, 1);
  
  D > 0 ?
    this.D = ADSR_time_coef / D
  : this.D = 1;
  this.D = min(this.D, 1);
  
  this.S = S;
  
  R > 0 ?
    this.R = ADSR_time_coef / R
  : this.R = 1;
  this.R = min(this.R, 1);
);


function ADSR_init(A D S R) (
  this.ADSR = 0;
  this.ASR = 0;
  this.AttackSeg = 0;
  
  this.ADSR_set(A, D, S, R);
 
);


//_____________________________________________________________________
//                                              Control rate processing
function ADSR_kProc(gate trig)
  local() (
  trig ? this.AttackSeg = 1;
  this.ASR < gate ?
    this.ASR += this.A * (gate - this.ASR)
  : this.ASR += this.R * (gate + 0.00000001 - this.ASR);
//  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
  this.AttackSeg === 1 ? (
    this.ADSR += this.A * (1.5 - this.ADSR);
    this.ADSR >= 1.0 ? 
    ( this.ADSR = 1.0;
      this.AttackSeg = 0;
    );
  );
  this.AttackSeg == 0 ? (
    gate != 0 ? (
      this.ADSR += this.D * (this.S - this.ADSR);
    ) : ( 
      this.ADSR += this.R * (0.00000001 - this.ADSR);
    );
  );
  this.ASR * this.ADSR;
);
