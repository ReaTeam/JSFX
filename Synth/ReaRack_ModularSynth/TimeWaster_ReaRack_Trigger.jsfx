version: 1.0.1
desc:ReaRack - Trigger
author: Malcolm Smith
changelog: Fixed a timing bug at 0 and 127 cc values.

/* 1.0.0 (2/9/2016) Initial Release.
   1.0.1 (9/9/2016) Fixed a timing bug at 0 and 127 cc values.
Copyright(C) 2016 and later, Malcolm Smith (username 'Time Waster' on REAPER forums).
License: LGPL - http://www.gnu.org/licenses/lgpl.html
*/

slider1:20<0,127,1{0 Bank Sel M,1 Mod Wheel M,2 Breath M,3,4 Foot P M,5 Porta M,6 Data Entry M,7 Vol M,8 Balance M,9,10 Pan M,11 Expression M,12 Ctrl 1 M,13 Ctrl 2 M,14,15,16 GP Slider 1,17 GP Slider 2,18 GP Slider 3,19 GP Slider 4,20,21,22,23,24,25,26,27,28,29,30,31,32 Bank Sel L,33 Mod Wheel L,34 Breath L,35,36 Foot P L,37 Porta L,38 Data Entry L,39 Vol L,40 Balance L,41,42 Pan L,43 Expression L,44 Ctrl 1 L,45 Ctrl 2 L,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64 Hold P sw,65 Porta sw,66 Sustenuto sw,67 Soft P sw,68 Legato P sw,69 Hold 2 P sw,70 S.Variation,71 S.Timbre,72 S.Release,73 S.Attack,74 S.Brightness,75 S.Ctrl 6,76 S.Ctrl 7,77 S.Ctrl 8,78 S.Ctrl 9,79 S.Ctrl 10,80 GP B.1 sw,81 GP B.2 sw,82 GP B.3 sw,83 GP B.4 sw,84,85,86,87,88,89,90,91 Effects Lv,92 Trem Lv,93 Chorus Lv,94 Celeste Lv,95 Phaser Lv,96 Data B. Inc,97 Data B. Dec,98 NRP L,99 NRP M,100 RP L,101 RP M,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>CC Input
slider2:1<0,15,1{All,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>MIDI Output Channel
slider3:0<0,1,1{Rising Edge,Falling Edge}>Trigger on:
slider4:0<0,127,1>Trigger CC Value
slider5:69<0,127,1>Output Note
slider6:127<0,127,1>Velocity
slider7:0.1<0.1,10,0.001>Trigger Hold (seconds)

in_pin:none
out_pin:none

options:gmem=ReRackTrig

@init

rsent = 0;
fsent = 0;
holdon = 0;
preccval = 0;
note[1] = "C";
note[2] = "C#";
note[3] = "D";
note[4] = "D#";
note[5] = "E";
note[6] = "F";
note[7] = "F#";
note[8] = "G";
note[9] = "G#";
note[10] = "A";
note[11] = "A#";
note[12] = "B";

@slider

ccin = slider1;
outChan = slider2-1;
edge = slider3;
trigval =slider4;
noteval = slider5;
notevel = slider6;
holdsec = slider7;
gnoteval = noteval % 12;
gnote = note[gnoteval+1];
goctave = (noteval - gnoteval)/12;


@block
hold = holdsec*(srate/samplesblock);

while (midirecv(offset, msg1, msg2, msg3))
(  
  // Extract message type
  status = msg1 & $xF0;    
  // Is it a controller event?
  status == $xB0 ?
  (
    // Is it the right CC?
    msg2 == ccin ?
    (
     ccval = msg3;
    );
  );
  // Pass thru
  midisend(offset, msg1, msg2, msg3); 
);
preccval < ccval ? rise = 1;
preccval > ccval ? rise = 0;

prerise - rise == 1 ? rsent = 0;
prerise - rise == -1 ? fsent = 0;
rise == 0 && ccval == 0 ? (rsent = 0; rise = 1);
rise == 1 && ccval == 127 ? (fsent = 0; Rise = 0);

edge == 0 ?
  (
   ccval >= trigval && rise == 1 && rsent == 0 ?
   (
    outChan == -1 ?
     (
      n = 0;
      loop(16,
        midisend(offset,$x90+n,noteval,notevel);
        n += 1;
        );
      ) : (
      midisend(offset,$x90+outChan,noteval,notevel);
      );
      rsent = 1;
      holdon = 1;
      blockcount = 0;
    );
  );
   
edge == 1 ?
  (
   ccval <= trigval && rise == 0 && fsent == 0 ?
   (
    outChan == -1 ?
     (
      n = 0;
      loop(16,
        midisend(offset,$x90+n,noteval,notevel);
        n += 1;
        )
      ) : (
      midisend(offset,$x90+outChan,noteval,notevel);
;
      );
      fsent = 1;
      holdon = 1;
      blockcount = 0;
    );
  );  
preccval = ccval;
prerise = rise;
blockcount >= hold ?
  (
   holdon == 1 ?
   (
    chanout == -1 ?
     (
      n = 0;
      loop(16,
        midisend(offset+n,$x80+n,noteval);
        n += 1;
        )  
      ) : (
      midisend(offset,$x80&outChan,noteval);
      );
      holdon = 0;
    );
  );
blockcount += 1;

@gfx 400 150

gfx_x = 225;
gfx_y = 17;
gfx_r = 1;
gfx_g = 0;

holdon == 1 ?
  (
   gfx_rectto(238,30);
   ):(
   gfx_lineto(238,17);
   gfx_lineto(238,30);
   gfx_lineto(225,30);
   gfx_lineto(225,17);
   );

gfx_x = 243;
gfx_y = 20;
gfx_r = 0;
gfx_g = 1;

gfx_drawstr("Note: ");
gfx_printf(gnote);
gfx_drawnumber(goctave,0);

gfx_x=50;
gfx_y=25+127;
gfx_lineto(50,(25+127)-(ccval));
gfx_lineto(60,(25+127)-(ccval));
gfx_lineto(60,(25+127));

gfx_r = 1;
gfx_g = 0;
gfx_a = 0.5;
gfx_x = 30;
gfx_y = 25;
gfx_lineto(30+(50),25);
gfx_x = 30;
gfx_y = 25+127;
gfx_lineto(30+(50),25+127);
gfx_a =1;
gfx_x = 30;
gfx_y = 25+127-trigval;
gfx_lineto(30+(50),25+127-trigval);


gfx_x = 5;
gfx_y = 20;
gfx_drawstr("127");
gfx_x = 18;
gfx_y = 20+127;
gfx_drawstr("0");
gfx_r = 0;
gfx_g = 1;
gfx_x =30+55;
gfx_y = 20+127-trigval;
gfx_drawstr("Trigger: ");
gfx_drawnumber(trigval,0);

