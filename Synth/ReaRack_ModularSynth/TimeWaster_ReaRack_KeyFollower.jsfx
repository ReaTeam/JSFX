version: 1.0.0
desc:ReaRack - Key Follower

// Copyright(C) 2016 and later, Malcolm Smith (username 'Time Waster' on REAPER forums).
// License: LGPL - http://www.gnu.org/licenses/lgpl.html

slider1:23<0,127,1{0 Bank Sel M,1 Mod Wheel M,2 Breath M,3,4 Foot P M,5 Porta M,6 Data Entry M,7 Vol M,8 Balance M,9,10 Pan M,11 Expression M,12 Ctrl 1 M,13 Ctrl 2 M,14,15,16 GP Slider 1,17 GP Slider 2,18 GP Slider 3,19 GP Slider 4,20,21,22,23,24,25,26,27,28,29,30,31,32 Bank Sel L,33 Mod Wheel L,34 Breath L,35,36 Foot P L,37 Porta L,38 Data Entry L,39 Vol L,40 Balance L,41,42 Pan L,43 Expression L,44 Ctrl 1 L,45 Ctrl 2 L,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64 Hold P sw,65 Porta sw,66 Sustenuto sw,67 Soft P sw,68 Legato P sw,69 Hold 2 P sw,70 S.Variation,71 S.Timbre,72 S.Release,73 S.Attack,74 S.Brightness,75 S.Ctrl 6,76 S.Ctrl 7,77 S.Ctrl 8,78 S.Ctrl 9,79 S.Ctrl 10,80 GP B.1 sw,81 GP B.2 sw,82 GP B.3 sw,83 GP B.4 sw,84,85,86,87,88,89,90,91 Effects Lv,92 Trem Lv,93 Chorus Lv,94 Celeste Lv,95 Phaser Lv,96 Data B. Inc,97 Data B. Dec,98 NRP L,99 NRP M,100 RP L,101 RP M,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>CC Output
slider2:0<0,16,1{All,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>MIDI Output Channel
slider3:50<0,127,1>Low End*
slider4:127<0,127,1>High End*
slider5:127<0,127,1>Mid Point*
slider6:100<0,127,1>Mid Point Position*
slider7:0<0,3,1{None,Master,Slave}>*Class
slider8:0<0,15,1{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Class Group

in_pin:none
out_pin:none

options:gmem=ReRackKeyF

@slider
group = slider8*10;

slider7 == 1 ? (
  gmem[group+1] = slider3;
  gmem[group+2] = slider4;
  gmem[group+3] = slider5;
  gmem[group+4] = slider6;
  );

ccout = slider1;
chanout = slider2-1;
lowlev = slider3;
hilev = slider4;
midlev = slider5;
midpos = slider6;

@block

slider9 == 2 ? (
  slider3 = gmem[group+1];
  slider4 = gmem[group+2];
  slider5 = gmem[group+3];
  slider6 = gmem[group+4];
  sliderchange(120);
  );
  
while (midirecv(offset, msg1, msg2, msg3))
(  
  // Extract message type
  status = msg1 & $xF0;
    
    // Is it a note on event?
    status == $x90 ?
    (
      // Get note
       note = msg2 & $x7F;
    );
  //Pass through
  midisend(offset, msg1, msg2, msg3);  
);
             


note <= midpos ?
  (
  ccval = floor(0.5+(lowlev +((midlev - lowlev)*(note/midpos))))
  ) : (
      ccval = floor(0.5+(midlev +((hilev - midlev)*(note/(127-midpos)))))
      );
      
//Send new CC message
chanout == -1 ? (
  n = 0;
  loop(16,
  midisend(offset,$xB0+n,ccout,ccval);
  n += 1;
  );
):(
  midisend(offset,$xB0+chanout,ccout,ccval);
);

@gfx 450 175

xscl = 3;

gfx_a = 0.5;
gfx_r = 1;
gfx_g = 0;
gfx_b = 0;
gfx_x = 25;
gfx_y = 25;
gfx_lineto(25+127*xscl,25);
gfx_x = 25;
gfx_y = 25+127;
gfx_lineto(25+127*xscl,25+127);
gfx_a = 1;
gfx_x = 1;
gfx_y = 22;
gfx_drawstr("127");
gfx_x = 13;
gfx_y = 22+127;
gfx_drawstr("0");

gfx_r = 0;
gfx_g = 1;

gfx_x = 25;
gfx_y = 25+127-lowlev;
gfx_lineto(25+midpos*xscl,25+127-midlev);
gfx_lineto(25+127*xscl,25+127-hilev);

gfx_a = 0.5;
gfx_x = 25+((note-0.5)*xscl);
gfx_y = 25+127;
gfx_lineto(25+((note-0.5)*xscl),25);
gfx_lineto(25+((note+0.5)*xscl),25);
gfx_lineto(25+((note+0.5)*xscl),25+127);
gfx_lineto(25+((note-0.5)*xscl),25+127);

