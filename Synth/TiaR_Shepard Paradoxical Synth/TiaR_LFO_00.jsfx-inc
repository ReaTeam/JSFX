desc:LFO library
/*
 Copyright 2014, Thierry Rochebois
 All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions are
  met:
  Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer. 

  Redistributions in binary form must reproduce the above copyright
  notice, this list of conditions and the following disclaimer in the
  documentation and/or other materials provided with the distribution. 

  The name of Thierry Rochebois may not be used to endorse or promote
  products derived from this software without specific prior written
  permission. 

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

//_____________________________________________________________________
@init
//_____________________________________________________________________
//                    Static ressources & tables for all LFO "objects"
function LFO()
  local() (
  LFO_time_coef = 4 / (srate/KRATE);
);

//_____________________________________________________________________
//                                              Init of a LFO instance
function LFO_setF(f) (
  this.f = f;
  this.dp = f * LFO_time_coef;
  this.dp = min(this.dp, 1);
);

//_____________________________________________________________________
//                                              Control rate processing
function LFO_kProc()
  local() (
  this.p += this.dp;
  this.p > 3 ? (this.p -= 4; this.rand = rand(););
  this.p < 1 ? this.triangle = this.p :
               this.triangle = 2 - this.p;
  this.sin = 0.5 * this.triangle * (3 - this.triangle * this.triangle);
);
