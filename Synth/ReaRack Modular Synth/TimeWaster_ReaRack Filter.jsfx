version: 1.1.0
desc: ReaRack - Filter
noindex: true
author: Malcolm Smith
about: HP/LP filter module for the ReaRack modular JSFX synth system.
changelog: Added MIDI CC modulation for resonance. Changed UI for cutoff level modulation.

/*Version 1.0.0 (2/9/2016) Initial release.
  Version 1.1.0 (30/9/2016)Added MIDI CC modulation rfor resonance. Changed UI for cutoff level modulation.

// Copyright(C) 2016 and later, Malcolm Smith (username 'Time Waster' on REAPER forums).
// Filter coce based on 'Reasonant Lowpass Filter' - Copyright (C) 2004 and later Cockos Incorporated
// License: LGPL - http://www.gnu.org/licenses/lgpl.html

slider1:0<0,127,1{Off,0 Bank Sel M,1 Mod Wheel M,2 Breath M,3,4 Foot P M,5 Porta M,6 Data Entry M,7 Vol M,8 Balance M,9,10 Pan M,11 Expression M,12 Ctrl 1 M,13 Ctrl 2 M,14,15,16 GP Slider 1,17 GP Slider 2,18 GP Slider 3,19 GP Slider 4,20,21,22,23,24,25,26,27,28,29,30,31,32 Bank Sel L,33 Mod Wheel L,34 Breath L,35,36 Foot P L,37 Porta L,38 Data Entry L,39 Vol L,40 Balance L,41,42 Pan L,43 Expression L,44 Ctrl 1 L,45 Ctrl 2 L,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64 Hold P sw,65 Porta sw,66 Sustenuto sw,67 Soft P sw,68 Legato P sw,69 Hold 2 P sw,70 S.Variation,71 S.Timbre,72 S.Release,73 S.Attack,74 S.Brightness,75 S.Ctrl 6,76 S.Ctrl 7,77 S.Ctrl 8,78 S.Ctrl 9,79 S.Ctrl 10,80 GP B.1 sw,81 GP B.2 sw,82 GP B.3 sw,83 GP B.4 sw,84,85,86,87,88,89,90,91 Effects Lv,92 Trem Lv,93 Chorus Lv,94 Celeste Lv,95 Phaser Lv,96 Data B. Inc,97 Data B. Dec,98 NRP L,99 NRP M,100 RP L,101 RP M,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>CC Input (Cutoff Level)
slider2:0<0,127,1{Off,0 Bank Sel M,1 Mod Wheel M,2 Breath M,3,4 Foot P M,5 Porta M,6 Data Entry M,7 Vol M,8 Balance M,9,10 Pan M,11 Expression M,12 Ctrl 1 M,13 Ctrl 2 M,14,15,16 GP Slider 1,17 GP Slider 2,18 GP Slider 3,19 GP Slider 4,20,21,22,23,24,25,26,27,28,29,30,31,32 Bank Sel L,33 Mod Wheel L,34 Breath L,35,36 Foot P L,37 Porta L,38 Data Entry L,39 Vol L,40 Balance L,41,42 Pan L,43 Expression L,44 Ctrl 1 L,45 Ctrl 2 L,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64 Hold P sw,65 Porta sw,66 Sustenuto sw,67 Soft P sw,68 Legato P sw,69 Hold 2 P sw,70 S.Variation,71 S.Timbre,72 S.Release,73 S.Attack,74 S.Brightness,75 S.Ctrl 6,76 S.Ctrl 7,77 S.Ctrl 8,78 S.Ctrl 9,79 S.Ctrl 10,80 GP B.1 sw,81 GP B.2 sw,82 GP B.3 sw,83 GP B.4 sw,84,85,86,87,88,89,90,91 Effects Lv,92 Trem Lv,93 Chorus Lv,94 Celeste Lv,95 Phaser Lv,96 Data B. Inc,97 Data B. Dec,98 NRP L,99 NRP M,100 RP L,101 RP M,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>CC Input (Resonance)
slider3:0<0,1,1{Lowpass,Highpass}>Filter Type*
slider4:0.5<0.1,1>Cutoff Level*
slider5:1<0.1,1>Modulation Range*
slider6:0<0,1>Resonance*
slider7:0<0,1>Modulation Range*
slider8:0<0,3,1{None,Master,Slave}>*Class
slider9:0<0,15,1{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Class Group

options:gmem=ReRackFilt

@init

sliderbits = 2^3+2^4+2^5+2^6+2^7;
modlevel = 1

@slider
group = slider9*10;

slider8 == 1 ? (
  //gmem[group+1] = slider1;
  //gmem[group+2] = slider2;
  gmem[group+3] = slider3;
  gmem[group+4] = slider4;
  gmem[group+5] = slider5;
  gmem[group+7] = slider6;
  gmem[group+7] = slider7;
  );

ccIn1 = slider1-1;
ccIn2 = slider2-1;
type = slider3;
cutlev = slider4;
cutrange = slider5;
reslev = slider6;
resrange = slider7;


freq = (2^((cutlev^0.5)*14.28771));
//cut = (freq*2) / (srate); 
fb=res+res/(1-cutbase);
    
  
@block

slider8 == 2 ? (
  //slider1 = gmem[group+1];
  //slider2 = gmem[group+2];
  slider3 = gmem[group+3];
  slider4 = gmem[group+4];
  slider5 = gmem[group+5];
  slider6 = gmem[group+6];
  slider7 = gmem[group+7];
  sliderchange(sliderbits);
  );
  
cutcount = min(samplesblock,25);

while (midirecv(offset, msg1, msg2, msg3))
(  
  // Extract message type
  status = msg1 & $xF0;
  channel = msg1 & $x0F;
   
  // Is it a controller event?
  status == $xB0 ? 
  (
    // Is it the right CC for cutoff modulation?
    msg2 == ccIn1 ?
    (
      cutmodval = msg3/127;    
    );
    // Is it the right CC for cutoff modulation?
    msg2 == ccIn2 ?
    (
      resmodval = msg3/127;    
    );
  );
  // Pass through
  midisend(offset, msg1, msg2, msg3); 
);
ccIn1 == -1 ? cutmodval = 0;
ccIn2 == -1 ? resmodval = 0;
modlevel = (cutrange-cutlev)*cutmodval;
freq = (2^(((cutlev+modlevel)^.5)*14.28771));
cut = min(((freq*2) / srate),0.99);
res = reslev +((resrange-reslev)*resmodval);
fb=res+res/(1-cut);
cutstep = ((cut - precut)/cutcount);
outcut = precut;
precut = cut;
count = 0;
 
@sample
count <= cutcount ? outcut += cutstep;

n3=n3+cut*(spl0-n3+fb*(n3-n4));
n4=n4+cut*(n3-n4);

rn3=rn3+cut*(spl1-rn3+fb*(rn3-rn4));
rn4=rn4+cut*(rn3-rn4);
type == 0 ? (
  spl0=n4;
  spl1=rn4;
  )
  :
  (  
  spl0=spl0-n4;
  spl1=spl1-rn4;
);

@gfx 100 140
gfx_x=gfx_y=5;
gfx_lineto(gfx_x, gfx_y,0);
gfx_r=gfx_b=0;
gfx_g=gfx_a=1;
gfx_drawstr("Cutoff Frequency = ");
gfx_drawnumber(freq,0);
gfx_drawstr(" Hz");

type == 0 ? (
  gfx_a = 0.5;
  gfx_x = 25;
  gfx_y = 80;
  gfx_lineto(45+(cutlev*200-res*40),80);
  gfx_lineto(45+(cutlev*200-res*20),80-res*40);
  gfx_lineto(65+(cutlev*200),120);
  gfx_lineto(400,120);
  gfx_a = 1;
  gfx_x = 25;
  gfx_y = 80;
  gfx_lineto(45+((cutlev+modlevel)*200-res*40),80);
  gfx_lineto(45+((cutlev+modlevel)*200-res*20),80-res*40);
  gfx_lineto(65+((cutlev+modlevel)*200),120);
  gfx_lineto(400,120);
  )
  :
  (
  type == 1 ? (
    gfx_a = 0.5;
    gfx_x = 25;
    gfx_y = 120;
    gfx_lineto(25+(cutlev*200),120);
    gfx_lineto(45+(cutlev*200+res*20),80-res*40);
    gfx_lineto(45+(cutlev*200+res*40),80);
    gfx_lineto(400,80);
    gfx_a = 1;
    gfx_x = 25;
    gfx_y = 120;
    gfx_lineto(25+((cutlev+modlevel)*200),120);
    gfx_lineto(45+((cutlev+modlevel)*200+res*20),80-res*40);
    gfx_lineto(45+((cutlev+modlevel)*200+res*40),80);
    gfx_lineto(400,80);
    );
);
