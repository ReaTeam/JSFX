desc: Stereo2Surround Rotator
author: Stige T.
version: 1.0
changelog: Initial release
link: http://jsplugins.supermaailma.net/
about:
	Stereo2Surround Rotator can be used to rotate stereo signal in surround space (Lf,Rf,Ls,Rs). It can be also used with 2-channel tracks to achieve leslie type special fx.
	Manual and automatic rotation modes. Also syncs with tempo.
	Additional crossover filter to split L & R into high and low frequency bands.

/*************************************
Stereo To Surround Rotator by Stige T.
*************************************/

//desc:Stereo To Surround Rotator [Build 20151002]

slider1:0<-360,360,1>Degrees
slider2:1<1,10,1>Multiplier
slider3:1<0,1,0.1>Width
slider4:0<0,2,1{Off,Degrees / Sec,Degrees / Beat}>Auto Rotate

slider10:0<0,1,1{Off,On}>Filter L/R
slider11:1000<100,10000,10>Freq
slider12:1<0.1,5,0.1>Q
slider13:0.8<0,1,0.01>Filter Blend

@init

function CalcX(angle) (
  this.x = sin(angle*0.0174532925) * width;
  this.out = (this.x+1) * 0.5;
);


function CalcY(angle) (
  this.y = cos(angle*0.0174532925) * width;
  this.out = (this.y+1) * 0.5;
);

function CalcXY()
(
  x = CalcX(angle);
  xInv = 1-x;
  y = CalcY(angle);
  yInv = 1-y;
);

function Rotator() (
  angle += rotatorAngle;
  angle < 0 ? angle += 360;
  angle >= 360 ? angle -= 360;
  CalcXY();
);

function TempoRotator() (
  angle += rotatorAngle * (tempo/60/4);
  angle < 0 ? angle += 360;
  angle >= 360 ? angle -= 360;
  CalcXY();
);

function megafilter(input)
instance(mX1,mX2,mY1,mY2,b0,b1,b2,a0,a1,a2,output)
(
  output = (b0/a0)*input + (b1/a0)*mX1 + (b2/a0)*mX2 - (a1/a0)*mY1 - (a2/a0)*mY2; 
  mX2 = mX1;
  mX1 = input;
  mY2 = mY1;
  mY1 = output;
  
);

function megafilter_init(freq,Q,gain,type)
instance(omega,tsin,tcos,alpha,b0,b1,b2,a0,a1,a2,A,beta)
(
  type = max(type,1);
  type = min(type,8);
  Q = max(Q,0.01);
  Q = min(Q,10);
  freq = max(freq,0.1);
  freq = min(freq,srate/2);

  A = pow(10.0,(gain/40.0));
  omega = 2*$pi*freq/srate;
  tsin = sin(omega);
  tcos = cos(omega);
  alpha = tsin/(2.0*Q);
  beta =sqrt(A)/Q;
  temp = freq+Q+gain+type;
  
  type == 1 ? (
  //low-pass
  b0 = (1-tcos)/2;
  b1 = 1-tcos;
  b2 = (1-tcos)/2;
  a0 = 1+alpha;
  a1 = -2*tcos;
  a2 = 1-alpha;
  );
  type == 2 ? (
  // hi-pass
  b0 = (1+tcos)/2;
  b1 = -(1+tcos);
  b2 = (1+tcos)/2;
  a0 = 1+alpha;
  a1 = -2*tcos;
  a2 = 1-alpha;
  );
  
);

angle = -90;

@slider

mul = slider2;
rotatorAngle = slider1 / srate * mul;
width = slider3;
auto = slider4;

!auto ? (
  angle = slider1 - 90;
  CalcXY();
);

filter = slider10;
freq = slider11;
q = slider12;
filterBlend = slider13;
f0.megafilter_init(freq,q,0,1);
f1.megafilter_init(freq,q,0,2);

@block

@sample

In.L = spl0;
In.R = spl1;

filter ? (
  In.L = f0.megafilter(In.L * filterBlend) + (In.L * (1-filterBlend));
  In.R = f1.megafilter(In.R * filterBlend) + (In.R * (1-filterBlend));
);

auto == 1 && play_state ? (
  Rotator();
);
auto == 2 && play_state ? (
  TempoRotator();
);

matrix.L1 = In.L * xInv * y;
matrix.R1 = In.L * x * y;
matrix.L2 = In.L * xInv * yInv;
matrix.R2 = In.L * x * yInv;

matrix.L1 += In.R * x * yInv;
matrix.R1 += In.R * xInv * yInv;
matrix.L2 += In.R * x * y;
matrix.R2 += In.R * xInv * y;

spl0 = matrix.L1 * 1.413;
spl1 = matrix.R1 * 1.413;
spl4 = matrix.L2 * 1.413;
spl5 = matrix.R2 * 1.413;

@gfx 400 250

gfx_setfont(1,"Arial",18,'b');

cntr_x = gfx_w * 0.5;
cntr_y = 125;

gfx_a = 0.5;
gfx_x = cntr_x - 90;
gfx_y = cntr_y - 90;
gfx_drawstr("L");
gfx_x = cntr_x + 80;
gfx_y = cntr_y - 90;
gfx_drawstr("R");
gfx_x = cntr_x + 80;
gfx_y = cntr_y + 75;
gfx_drawstr("Rs");
gfx_x = cntr_x - 90;
gfx_y = cntr_y + 80;
gfx_drawstr("Ls");

gfx_a = 1;
gfx_r = 0; gfx_g = 0.7; gfx_b = 0;
gfx_circle(cntr_x,cntr_y,103,1,1);
gfx_r = 0; gfx_g = 0.1; gfx_b = 0;
gfx_circle(cntr_x,cntr_y,100,1,1);

lineX = sin(-angle*0.0174532925) * 100 * width;
lineY = cos(-angle*0.0174532925) * 100 * width;

gfx_a = 1;
gfx_r = 1; gfx_g = 0; gfx_b = 0;
gfx_line(cntr_x,cntr_y,cntr_x + lineX,cntr_y + lineY,1);
gfx_r = 0; gfx_g = 0; gfx_b = 1;
gfx_line(cntr_x,cntr_y,cntr_x + 1-lineX,cntr_y + 1-lineY,1);

gfx_x = 10; gfx_y = 10;
gfx_r = 1; gfx_g = 1; gfx_b = 1;

rangle = angle+90 >= 360 ? angle - 270 : angle+90;
rangle = rangle <= -360 ? rangle = 0 : rangle;
gfx_drawstr( strcat(sprintf(#,"%.1f",rangle)," deg") );


