desc: Hadamard Variable Delay Array
version: 1.0
author: T.Rochebois
changelog: Initial release
provides: TiaR_HadamVerb/*
link: http://stash.reaper.fm/v/23730/TiaR_HadamVerb.zip

slider1:0.2<0.01,1>Base Delay (s)

slider4:2<0,5>Fb 1
slider5:2<0,5>Fb 2

slider8:30<0,60>VLFO cycle A
slider9:20<0,60>B

slider12:10<1,20>Factor between arrays

slider14:0.01<0,0.5>Modulation depth

slider20:0<-24,24>Gain (dB)

import TiaR_HAD_00.jsfx-inc
// _____________________________________________________________________
@init
HAD();
h1.HAD_init();
h2.HAD_init();
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
function VLFO_proc()
instance(p dp s c)(
  p += dp;
  p > $pi ? p -= 2 * $pi;
  s = sin(p);
  c = cos(p);
);
// _____________________________________________________________________
@slider
gain = 2 ^ (slider20 / 6);
sl4 = 1 / (1 + slider4);
sl5 = 1 / (1 + slider5);
_sl12 = 1 / slider12;
sl0 = srate * slider1;

//"chorus"
vlfo1.dp = 1.13 * (slider12 / slider8) * 2*$pi / srate;
vlfo2.dp = 0.90 * (slider12 / slider9) * 2*$pi / srate;
//"reverb"
vlfo3.dp = (1 / slider8) * 2*$pi / srate;
vlfo4.dp = (1 / slider9) * 2*$pi / srate;
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
// First array, chorus style
h1.HAD_setFBs(sl4, 
              sl4, 
       1.17 * sl4, 
       1.27 * sl4);
// Second array, reverb style
h2.HAD_setFBs(sl5,
              sl5, 
       1.27 * sl5, 
       1.30 * sl5);
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
d1_0 = 0.3 * sl0 * _sl12;
d1_1 = 0.4 * sl0 * _sl12;
d1_2 = 1.5 * sl0 * _sl12;
d1_3 = 2.0 * sl0 * _sl12;
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
d2_0 = 1.13 * sl0;
d2_1 = 0.83 * sl0;
d2_2 = 1.32 * sl0;
d2_3 = 0.57 * sl0;
// _____________________________________________________________________
@sample
// chorus unit
// inputs and feedback from the reverb array
h1.HAD_aProc( spl0,  spl1, 0.49 * h2.y2, 0.49 * h2.y3);
// reverb unit
h2.HAD_aProc(h1.y0, h1.y1, h1.y2, h1.y3);
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
//                                                                VLFOs
vlfo1.VLFO_proc();
vlfo2.VLFO_proc();
vlfo3.VLFO_proc();
vlfo4.VLFO_proc();
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
//                                Delay modulation of the chorus delays
h1.HAD_setDelays(
  d1_0 * (1 + slider14 * vlfo1.s), 
  d1_1 * (1 + slider14 * vlfo2.s), 
  d1_2 * (1 + slider14 * vlfo1.c), 
  d1_3 * (1 + slider14 * vlfo2.c));
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
//                                Delay modulation of the reverb delays
h2.HAD_setDelays(
  d2_0 * (1 + slider14 * vlfo3.s), 
  d2_1 * (1 + slider14 * vlfo4.c), 
  d2_2 * (1 + slider14 * vlfo3.s), 
  d2_3 * (1 + slider14 * vlfo4.c));
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
spl0 = gain * (h2.y0 + h1.y0 + h1.x0);
spl1 = gain * (h2.y1 - h1.y1 + h1.x1);

