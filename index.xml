<?xml version="1.0" encoding="utf-8"?>
<index version="1" name="ReaTeam JSFX" commit="7619ef24c53218875baaf2213727a77be7b1f4fd">
  <category name="Distortion">
    <reapack name="TiaR_Ze Morpho Dist.jsfx" type="effect" desc="Ze Morpho Dist">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This is a LFO controlled Stereo Distortion Effect\par}
}
]]></description>
        <link rel="website">http://forum.cockos.com/showthread.php?t=173611</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-08T20:52:46Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Distortion/TiaR_Ze%20Morpho%20Dist.jsfx</source>
        <source file="TiaR_Ze Morpho Dist/ZeMorphoDistIII.RPL">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Distortion/TiaR_Ze%20Morpho%20Dist/ZeMorphoDistIII.RPL</source>
      </version>
    </reapack>
  </category>
  <category name="Filter">
    <reapack name="TiaR_Lattice Filter.jsfx" type="effect" desc="Lattice Filter">
      <version name="1.0" author="T.Rochebois" time="2016-08-08T20:46:50Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Filter/TiaR_Lattice%20Filter.jsfx</source>
        <source file="TiaR_Lattice Filter/TiaR_LFX_01.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Filter/TiaR_Lattice%20Filter/TiaR_LFX_01.jsfx-inc</source>
      </version>
    </reapack>
  </category>
  <category name="MIDI">
    <reapack name="cfillion_MIDI Note Length Control.jsfx" type="effect" desc="MIDI Note Length Control">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 MIDI Note Length Control\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Set a minimum length in beats and/or a maximum length to incoming MIDI notes. This plugin supports input channel selection and choosing a range of notes on which to apply the processing on.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Putting the minimum or maximum length sliders to 0 will disable that specific feature.\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="cfillion" time="2017-04-21T19:20:48Z">
        <source>https://github.com/ReaTeam/JSFX/raw/b858e8ace51ac0be8d0cbb0d995ca8efa82175f4/MIDI/cfillion_MIDI%20Note%20Length%20Control.jsfx</source>
      </version>
      <version name="1.0.1" author="cfillion" time="2017-04-23T15:29:14Z">
        <changelog><![CDATA[Fix for subsequent notes being cut early.]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/b95520767d8de9aa7ae8b79a63e443a30f9e0ac9/MIDI/cfillion_MIDI%20Note%20Length%20Control.jsfx</source>
      </version>
    </reapack>
    <reapack name="cfillion_MIDI Taps Repeater.jsfx" type="effect" desc="MIDI Taps Repeater">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 MIDI Taps Repeater\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Repeat MIDI notes {\i n} times after a delay set in beats until released.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 If the "Taps" parameter is set to 0 the note is repeated forever (or until velocity reaches zero).\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="cfillion" time="2018-03-18T17:04:24Z">
        <source>https://github.com/ReaTeam/JSFX/raw/6c28b721dcd622b0aa7421dfc18678b9392c51bd/MIDI/cfillion_MIDI%20Taps%20Repeater.jsfx</source>
      </version>
    </reapack>
    <reapack name="cfillion_Note Duplicator.jsfx" type="effect" desc="Note Duplicator">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Note Duplicator\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This effect repeats the previous MIDI notes when they are released, preserving the original duration. Useful for playing 16th notes while actually only playing 8th on the keyboard.\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="cfillion" time="2017-03-22T21:49:14Z">
        <source>https://github.com/ReaTeam/JSFX/raw/f5af11d7b40782c8078ef8ba468732e8b1872dde/MIDI/cfillion_Note%20Duplicator.jsfx</source>
      </version>
    </reapack>
    <reapack name="cfillion_Sustain pedal to note length.jsfx" type="effect" desc="Sustain pedal to note length">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This effect delays note off message when a pedal is down until it is released. The (customizable) pedal CC events can either be eaten or let through the MIDI stream.\par}
}
]]></description>
        <link rel="screenshot">https://i.imgur.com/nzzbF20.gif</link>
      </metadata>
      <version name="1.0" author="cfillion" time="2019-03-01T14:57:23Z">
        <source>https://github.com/ReaTeam/JSFX/raw/7619ef24c53218875baaf2213727a77be7b1f4fd/MIDI/cfillion_Sustain%20pedal%20to%20note%20length.jsfx</source>
      </version>
    </reapack>
    <reapack name="mathphreak_Learningbaby.jsfx" type="effect" desc="Learningbaby">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Learningbaby\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The Learningbaby is a Sequencer Baby v2 that learns. It will add incoming MIDI notes to the pattern.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Video demonstration/tutorial {\field{\*\fldinst{HYPERLINK "https://youtu.be/dMTiWafJFmg"}}{\fldrslt{\ul
here
}}}
.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b NOTE:} If you use automation to change the selected pattern, you will get incorrect results. Change the "Next Pattern" during a loop and you'll get a correct transition.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Features added to Sequencer Baby v2:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Select between retriggering notes if sequenced on adjacent ticks and extending (retriggering makes sense for drums, extending for everything else)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Clear current pattern by just moving a slider\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Better automated pattern switching\sa180\par}
}
]]></description>
        <link rel="website" href="http://forum.cockos.com/showthread.php?p=1845408">Forum Thread</link>
        <link rel="website" href="https://youtu.be/dMTiWafJFmg">Video demonstration/tutorial</link>
      </metadata>
      <version name="1.0" author="Matt Horn" time="2017-05-17T06:09:39Z">
        <changelog><![CDATA[- Released Learningbaby]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/6fee80c6f700aac85ae85bbfb1fde81ee8b5d639/MIDI/mathphreak_Learningbaby.jsfx</source>
      </version>
      <version name="2.0" author="Matt Horn" time="2017-06-14T00:59:38Z">
        <changelog><![CDATA[- Added "Next Pattern" for better automation of pattern switching]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/c007e71f7caeed0d85a3bb665fd092540e228798/MIDI/mathphreak_Learningbaby.jsfx</source>
      </version>
    </reapack>
    <reapack name="mbncp_Legato Control.jsfx" type="effect" desc="Legato control">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Holds each note until next note is pressed.\sa180\par}
}
]]></description>
        <link rel="website">http://forum.cockos.com/showthread.php?p=176566</link>
      </metadata>
      <version name="0.3" author="mbncp" time="2017-10-01T00:56:44Z">
        <changelog><![CDATA[April 18 2008
+ initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/82ceb72da14753dcb3ce9be5722c07ff7a1aedad/MIDI/mbncp_Legato%20Control.jsfx</source>
      </version>
    </reapack>
    <reapack name="mbncp_PitchWheel.jsfx" type="effect" desc="PitchWheel Control Center">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 can convert pitch ranges (see linked forum thread)\par}
}
]]></description>
        <link rel="website">http://forum.cockos.com/showthread.php?p=181581</link>
      </metadata>
      <version name="0.2" author="mbncp" time="2017-10-01T00:56:44Z">
        <changelog><![CDATA[May 02 2008
+ initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/82ceb72da14753dcb3ce9be5722c07ff7a1aedad/MIDI/mbncp_PitchWheel.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_MIDI MPE to single channel.jsfx" type="effect" desc="MIDI MPE to single channel">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This plugin combines the multiple channels in an MPE Midi stream to a single channel to allow for feeding a single polyphonic or monophonic instrument.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 All incoming midi messages are routed to a single channel.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Up to three three realtime control messages are modified on the fly. All other messages are not modified. Each of the three message types can be chosen to be either of a CC message with a defined number, Pitch Wheel, or Channel Pressure. For each of the three, the incoming values are monitored and the current state is stored according to the input channel, i.e. for any keys simultaneously pressed on an MPE aware keyboard. In order to create a consistent value for the non-MPE-aware instrument to be played, appropriate modified messages for these control values are generated any time either such a control value change message is received or a Note-On or Note-Off message is received. This message will denote either the last received value ("latest", which in effect provides no change to that value), or a combination of the just received message and current values of all channels that currently hold a running sound, according to the previous Note-On and Note-Off messages.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 In "Polyphonic" mode, this combination will be computed as either of the minimum, the average, or the maximum. Hence the played polyphonic sound will be provided with more reasonable control values than just adhering to the latest value present on any of the MPE channels.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 In "Monophonic" mode, the three selected realtime control messages are never modified, but blocked while two or more channels provide a running sound. This allows for rather normal behavior of instruments that detect legato note transitions and trills.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A graphic shows the currently "running" channels and the saved values of the three managed realtime controls. The last line shows the last value sent out. Moreover the first number in the last line denotes that one of the following states has been encountered since the last start: 1: a Note On has been detected on an already running channel. 2: a Note Off has been detected on a not running channel. 4: two running channel at the same time in "Monophonic" mode, resulting in blocking realtime messages. The second number shows the number of currently "running" channels.\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2018-12-06T23:08:44Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/25e68b184909f2b84453f7a0c08c0efbc0196156/MIDI/mschnell_MIDI%20MPE%20to%20single%20channel.jsfx</source>
      </version>
    </reapack>
    <reapack name="TJA_MIDI note-banked CC multiplier.jsfx" type="effect" desc="MIDI note-banked CC multiplier">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Modifies control change (CC) inputs depending on which MIDI note has been pressed. MIDI notes switch between banks and each bank outputs a unique set of CCs.\par}
}
]]></description>
      </metadata>
      <version name="0.1" author="Kevin Morrison (ThrashJazzAssassin)" time="2019-01-15T11:39:46Z">
        <source>https://github.com/ReaTeam/JSFX/raw/546028c3f511a5673ec0a59c163343632e34aa10/MIDI/TJA_MIDI%20note-banked%20CC%20multiplier.jsfx</source>
      </version>
      <version name="0.1.1" author="Kevin Morrison (ThrashJazzAssassin)" time="2019-02-07T22:42:41Z">
        <changelog><![CDATA[Stops latch mode sending unnecessary note-ons]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/da50c468ef9e62d19973fd55abf8959c77248482/MIDI/TJA_MIDI%20note-banked%20CC%20multiplier.jsfx</source>
      </version>
    </reapack>
    <reapack name="TJA_MIDI Performer.jsfx" type="effect" desc="MIDI Performer">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 8 x Router/Filter/Transposer/Bank+Program\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Features hanging note prevention so holding a note or sustain pedal while changing output routing, note filter or transpose is unlikely to leave notes hanging when they are released.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Hold CTRL/Command to mousewheel shift by 12 - but only if the fx window is focused\par}
}
]]></description>
        <link rel="screenshot">https://stash.reaper.fm/35134/performer.PNG</link>
      </metadata>
      <version name="0.1" author="Kevin Morrison (ThrashJazzAssassin)" time="2019-01-15T11:32:09Z">
        <source>https://github.com/ReaTeam/JSFX/raw/9d3ea500df460ad7f495a5bbf9277701c9f63e7f/MIDI/TJA_MIDI%20Performer.jsfx</source>
      </version>
      <version name="0.1.1" author="Kevin Morrison (ThrashJazzAssassin)" time="2019-02-13T23:01:23Z">
        <changelog><![CDATA[Stops sending bank & program changes on project load]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/c2a1d58984d075ee30175dcde6b3db99a8c90d53/MIDI/TJA_MIDI%20Performer.jsfx</source>
      </version>
      <version name="0.2" author="Kevin Morrison (ThrashJazzAssassin)" time="2019-02-26T14:36:13Z">
        <changelog><![CDATA[-Scale with window resize
-Add bus + channel input for all rows - defaults to global buss + channel]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/34d9abe37f1d0187a5c0fba74ea17e3a416957de/MIDI/TJA_MIDI%20Performer.jsfx</source>
      </version>
      <version name="0.2.1" author="Kevin Morrison (ThrashJazzAssassin)" time="2019-02-27T04:56:49Z">
        <changelog><![CDATA[Fix for broken presets created with v1]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/fb029b2799bcafae5397b4342760cf4de366f5a1/MIDI/TJA_MIDI%20Performer.jsfx</source>
      </version>
    </reapack>
    <reapack name="urtzurd_MIDI Glissando.jsfx" type="effect" desc="MIDI Glissando">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Mono/poly MIDI chromatic glissando FX with adjustable note delay\par}
}
]]></description>
      </metadata>
      <version name="0.1" author="urtzurd (Urtzi Urdapilleta Roy)" time="2017-10-07T23:49:35Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/e7ed9a1ccc661d901153d5e07d8357142d864a4b/MIDI/urtzurd_MIDI%20Glissando.jsfx</source>
      </version>
    </reapack>
    <reapack name="XQ_Drum Converter.jsfx" type="effect" desc="Drum Converter">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 XQ Drum Converter\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This plugin is designed to convert MIDI drums from one map to another. Currently it converts from GM to Addictive Drums, BFD and Superior Drummer.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Parameters\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Square brackets mean that this slider/droplist is read-only.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Input Channel:} self-explanatory.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Input Note]:} displays last input note.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b From:} select a map to convert from.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Orphan Notes:} how to process inconvertable notes.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Kill: default.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Remap: change to Flexi 1 for AD, Perc 1 for BFD and #0 for SD.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b To:} select a map to convert to.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Output Note]:} displays last converted note.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Output Channel:} self-explanatory.\sa180\par}
}
]]></description>
        <link rel="website" href="https://forum.cockos.com/showthread.php?p=2091997">Forum thread</link>
      </metadata>
      <version name="1.1" author="Xeewaj Q." time="2019-02-13T13:27:37Z">
        <changelog><![CDATA[Notes are displayed only for "note on" events.]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/81ba14a83f1e6f88882ee5a704b724689dcfbd61/MIDI/XQ_Drum%20Converter.jsfx</source>
      </version>
    </reapack>
    <reapack name="XQ_Drum Deviator.jsfx" type="effect" desc="Drum Deviator">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 XQ Drum Deviator\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This plugin is designed to reduce the pain of tweaking MIDI drums (velocity/timing randomizing, filtering etc). It supports various (GM, Addictive Drums, BFD, Superior Drummer) drum maps and can process subsets (i.e. hats, toms etc) separately. It supports three randomizing styles (random, precise & sloppy) and can be used as non-drum randomizer too.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Parameters\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Square brackets mean that this slider/droplist is read-only. After each trim and/or randomizing velocity is clamped to the standard range of 1-127.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Input Channel:} self-explanatory.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Channel]:} displays last event's channel.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Drum Map:} select your drum map or "None" for processing all notes (ignoring subset).\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Subset:} select set of drums you want to modify (or "Everything" for all drums in the map).\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Note]:} displays last event's note.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Action:}\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Preview: process & visualize all sliders, but send out original values.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Process: process selected notes and pass through others;\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Filter: process selected notes and kill others;\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Ignore: do nothing (pass through);\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Kill: delete selected notes.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Filter:}\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Normal: affect only notes;\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Strict: affect all events.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Choke:} how we process (cymbal) chokes.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Ignore: pass through;\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Set To 1: set velocity to 1 (for aesthetic purposes?);\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Set To 0: set velocity to 0 (you know what you're doing, right?);\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Kill: delete chokes.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Zero Velocity:} how we process zero velocity notes.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Ignore: pass through;\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Set To 1: set velocity to 1 and process as a normal note;\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Kill: delete zero notes.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Input Velocity]:} displays last event's raw velocity (possibly affected by choke/zero options).\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Input Velocity Min]:} displays lowest input velocity.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Input Velocity Max]:} displays highest input velocity.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Reset Velocity To:} if not zero, resets all notes velocity to a fixed value.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Trim Input:} adds (removes) some fixed value to note velocity.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Velocity Deviation Type:}\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Random: even distribution;\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Precise: strives to smaller values;\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Sloppy: strives to bigger values.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Velocity Deviation Tendency:} a chance that velocity deviation will occur (0-100%).\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Max Velocity Deviation:} self-explanatory.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Velocity Deviation Direction:} how velocity can be changed.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Up: up.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Both: up/down.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Down: down.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Stronger Beats:} if Yes, notes at beats (quarters) will get only positive deviations.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Velocity Deviation]:} displays last event's velocity deviation.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Time Shift:} constant time shift to all notes, in ms.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Timing Deviation Type:} same as velocity one.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Timing Deviation Tendency:} same as velocity one.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Max Timing Deviation:} self-explanatory, in milliseconds.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Timing Deviation Direction:} how timing can be changed.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Lag: up.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Both: up/down.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Haste: down.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Precise Beats:} if Yes, deviation will not apply to notes at beats.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Timing Deviation]:} displays last event's timing deviation.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Min Clamp Velocity:} lowest possible velocity, lower values will be adjusted.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Max Clamp Velocity:} highest possible velocity, higher values will be adjusted.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Clamp Variation Range:} if not zero, adds variation up to specified value to clamp edges (output can't be out of the clamp range).\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Trim Output:} adds (removes) some fixed value to note velocity.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Output Velocity]:} displays last event's actual velocity after processing.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Output Velocity Min]:} displays lowest output velocity.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b [Output Velocity Max]:} displays highest output velocity.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Output Channel:} self-explanatory.\sa180\par}
}
]]></description>
        <link rel="website" href="https://forum.cockos.com/showthread.php?t=216953">Forum thread</link>
      </metadata>
      <version name="1.1" author="Xeewaj Q." time="2019-02-13T13:27:27Z">
        <changelog><![CDATA[Fixed audio delay when rendering.]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/0fa95de26016fafa4d4ea34d0dbd53fec0b15e38/MIDI/XQ_Drum%20Deviator.jsfx</source>
      </version>
      <version name="3.0" author="Xeewaj Q." time="2019-02-18T04:44:55Z">
        <changelog><![CDATA[New options: time shift, velocity/timing deviation direction.]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/858b3b70502684f778b4f1df7fbe698706704fdb/MIDI/XQ_Drum%20Deviator.jsfx</source>
      </version>
      <version name="4.0" author="Xeewaj Q." time="2019-02-19T04:59:20Z">
        <changelog><![CDATA[Precise beats option, beat detection corrections.]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/707be260145b60b03feb5e122dfd3ce9237c1cd6/MIDI/XQ_Drum%20Deviator.jsfx</source>
      </version>
    </reapack>
    <reapack name="XQ_Drum Equalizer.jsfx" type="effect" desc="Drum Equalizer">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 XQ Drum Equalizer\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This plugin is designed to adjust (trim/clamp) different MIDI drums separately. It supports GM, Addictive Drums, BFD, Superior Drummer drum maps and 8 bands (kick, snare, hat, toms, rides, cymbals, brushes, misc).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Parameters\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Square brackets mean that this slider/droplist is read-only. After each trim velocity is clamped to the standard range.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Drum Map:} select your drum map.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab {\b Wrong Notes:} how to process notes outside the map.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Kill: kill.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Pass: passthrough.\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b Chokes:} how to process choke notes.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Pass: passthrough.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Process: process (cymbals band).\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 There are 8 bands and 1 master section with 4 controls each:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b X Clamp Min:} lowest possible velocity, lower values will be adjusted.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b X Clamp Max:} highest possible velocity, higher values will be adjusted.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b X Trim:} adds (removes) some fixed value to note velocity.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b [X]:} displays last event's actual velocity after processing.\sa180\par}
}
]]></description>
      </metadata>
      <version name="1.1" author="Xeewaj Q." time="2019-02-13T13:27:47Z">
        <changelog><![CDATA[Fixed duplicate notes under some circumstances.]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/1714dc8b03443be9d56102323cea9550c256a603/MIDI/XQ_Drum%20Equalizer.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Misc">
    <reapack name="TiaR_PM_Resynth.jsfx" type="effect" desc="MIDI PM Resynth">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This is an experimental midi controlled effect. So, even if its internals ar synth like, it needs an audio input (a synth, a chaos oscillator, an audio track) and midi control.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The incoming signal is sampled, windowed, phase modulated and looped and crossfaded with incoming signal that is again sampled, windowed phase modulated and looped and crossfaded with incoming signal that is again sampled, windowed phase modulated and looped and crossfaded. until you stop pressing the keys.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 So the output pitch is controlled by the keyboard, whatever the incoming signal is.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Feed it with whatever you want.\par}
}
]]></description>
        <link rel="website">http://stash.reaper.fm/v/22117/TiaR_PM_Resynth.zip</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Misc/TiaR_PM_Resynth.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Modulation">
    <reapack name="mschnell_Delay_Modulator.jsfx" type="effect" desc="Delay Modulator">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The plugin introduces a delay that can be set by the "Center Delay" sliders either in Milliseconds or in Samples.\line The other slider always moves appropriately. (Remember that you also can type in values outside the regular range of the sliders.) This delay will be set as "pdc-delay" and hence automatically be compensated by the Reaper.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The center delay can be modulated between 0 and twice the "Center" value. Requesting a greater modulation results in clipping the modulation amount appropriately. The amount of modulation can be set between 0 and 100 % (100 % = maximum possible modulation with the sum of the side chain inputs = 0 db)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The Modulation Type selection allows for using either the straight side chain signals to modulate the delay, resulting in a kind of Phase Modulation or to use the interal of the site chain signal resulting in a kind of Frequency Modulation.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 "Dry" and "wet" sliders are provide the obvious functionality and can be set between 0 and 100 %\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A graphic shows the delay from left to right and the amplitude of the carrier upwards. The original (red), dry (blue) and wet (green) signals connected by white lines.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 usage\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The plugin can be used as a very versatile vibrato when recording a low frequency wave form and providing same as the side chain input.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 In the same way a creative Flanger can be done by mixing the dry and wet signals.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Vice versa, a versatile kind of Tremolo can be done by using the side chain input for the audio and sending a low frequency value to the input 1 or 2.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Very creative effects can be accomplished by sending different audio streams to the input and to the site chain (beware that the "carrier" input (1+2) is stereo, while the side chain input (3+4) is mixed to a single mono signal.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2017-12-20T00:02:53Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f74027d1e393e61f3687aae209014342bf727c2a/Modulation/mschnell_Delay_Modulator.jsfx</source>
      </version>
      <version name="1.1" author="Michael Schnell (mschnell@bschnell.de)" time="2017-12-20T23:54:09Z">
        <changelog><![CDATA[bug fixes, added graphics for fun and to start to gain compatibility with ReaRack]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/292c9214c8891815c5abfd50b51580226f8886f8/Modulation/mschnell_Delay_Modulator.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_ChopChop.jsfx" type="effect" desc="Stereo Chop chop">
      <metadata>
        <link rel="website">https://www.youtube.com/watch?v=LHbSUXsJ82M</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-20T19:09:22Z">
        <changelog><![CDATA[Initial Release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/7691aab88e23bba10e4e17c7915f3563654dd3b9/Modulation/TiaR_ChopChop.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze Big Chorus.jsfx" type="effect" desc="Ze Big Chorus">
      <version name="1.0" author="T.Rochebois" time="2016-08-08T20:46:50Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Big%20Chorus.jsfx</source>
        <source file="TiaR_Ze Big Chorus/TiaR_SCP_01.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Big%20Chorus/TiaR_SCP_01.jsfx-inc</source>
        <source file="TiaR_Ze Big Chorus/TiaR_ZeBigChorus_03.RPL">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Big%20Chorus/TiaR_ZeBigChorus_03.RPL</source>
        <source file="TiaR_Ze Big Chorus/TiaR_ZeBigChorus_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Big%20Chorus/TiaR_ZeBigChorus_03.jsfx-inc</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze Little Scanner Chorus.jsfx" type="effect" desc="Ze Scanner Chorus">
      <version name="1.06" author="T.Rochebois" time="2016-08-08T20:46:50Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Little%20Scanner%20Chorus.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Reverb">
    <reapack name="TiaR_HadamVerb.jsfx" type="effect" desc="Hadamard Variable Delay Array">
      <metadata>
        <link rel="website">http://stash.reaper.fm/v/23730/TiaR_HadamVerb.zip</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Reverb/TiaR_HadamVerb.jsfx</source>
        <source file="TiaR_HadamVerb/HadamVerb.RPL">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Reverb/TiaR_HadamVerb/HadamVerb.RPL</source>
        <source file="TiaR_HadamVerb/TiaR_HAD_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Reverb/TiaR_HadamVerb/TiaR_HAD_00.jsfx-inc</source>
      </version>
    </reapack>
  </category>
  <category name="Routing">
    <reapack name="MDF_51 to DMS.jsfx" type="effect" desc="5.1 to DoubleMidSide">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ENcodes 5.1 surround recodrings into double mid side recordings\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Michael Fewkes" time="2017-10-25T09:40:53Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f68071f3067f41a55c6400965b171e64a5d1f7d2/Routing/MDF_51%20to%20DMS.jsfx</source>
      </version>
    </reapack>
    <reapack name="MDF_DMS to 51.jsfx" type="effect" desc="DoubleMidSide to 5.1">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Decodes double mid side recodrings into 5.1 surround recordings\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Michael Fewkes" time="2017-10-25T09:40:53Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f68071f3067f41a55c6400965b171e64a5d1f7d2/Routing/MDF_DMS%20to%2051.jsfx</source>
      </version>
    </reapack>
    <reapack name="MDF_DMS to FOA.jsfx" type="effect" desc="DoubleMidSide to FOA">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Decodes double mid sidefirst order ambisonic recodrings into first order ambisonic recordings (no vertical)\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Michael Fewkes" time="2017-10-25T09:40:53Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f68071f3067f41a55c6400965b171e64a5d1f7d2/Routing/MDF_DMS%20to%20FOA.jsfx</source>
      </version>
    </reapack>
    <reapack name="MDF_DMS to Quad.jsfx" type="effect" desc="DoubleMidSide to Quadraphonic">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Decodes double mid side recodrings into quadraphonic surround recordings\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Michael Fewkes" time="2017-10-25T09:40:53Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f68071f3067f41a55c6400965b171e64a5d1f7d2/Routing/MDF_DMS%20to%20Quad.jsfx</source>
      </version>
    </reapack>
    <reapack name="MDF_DMS to Stereo.jsfx" type="effect" desc="DoubleMidSide to Stereo">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Decodes double mid side recodrings into stereo recordings\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Michael Fewkes" time="2017-10-25T09:40:53Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f68071f3067f41a55c6400965b171e64a5d1f7d2/Routing/MDF_DMS%20to%20Stereo.jsfx</source>
      </version>
    </reapack>
    <reapack name="MDF_FOA to DMS.jsfx" type="effect" desc="FOA to DoubleMidSide">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Decodes first order ambisonic recodrings into double mid side recordings (loose vertical)\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Michael Fewkes" time="2017-10-25T09:40:53Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f68071f3067f41a55c6400965b171e64a5d1f7d2/Routing/MDF_FOA%20to%20DMS.jsfx</source>
      </version>
    </reapack>
    <reapack name="MDF_Quad to DMS.jsfx" type="effect" desc="Quadraphonic to DoubleMidSide">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Encodes quadraphonic recodrings into double mid side recordings\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Michael Fewkes" time="2017-10-25T09:40:53Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f68071f3067f41a55c6400965b171e64a5d1f7d2/Routing/MDF_Quad%20to%20DMS.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Synth">
    <reapack name="TiaR_2op PM Synth.jsfx" type="effect" desc="2op PM Synth">
      <metadata>
        <link rel="website">http://forum.cockos.com/showthread.php?p=1385314&amp;posted=1#post1385314</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth.jsfx</source>
        <source file="TiaR_2op PM Synth/TiaR_ADSR.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_ADSR.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_HSL.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_HSL.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_KBD.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_KBD.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_LFO.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_LFO.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_PMX.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_PMX.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_PMXsliders.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_PMXsliders.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_SCH.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_SCH.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_Scope.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_Scope.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/js-TiaR_PMX_js.ini">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/js-TiaR_PMX_js.ini</source>
      </version>
    </reapack>
    <reapack name="TiaR_Chua Oscillator.jsfx" type="effect" desc="Chua Oscillator">
      <metadata>
        <link rel="website">http://stash.reaper.fm/v/21646/TiaR_chua_02.zip</link>
      </metadata>
      <version name="0.2" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Chua%20Oscillator.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_Complex X Filter Synth.jsfx" type="effect" desc="Complex X Filter Synth">
      <metadata>
        <link rel="website">http://stash.reaper.fm/v/22067/TiaR_CXF_synth_deluxe.zip</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-08T20:59:58Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth.jsfx</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_ADSR_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_ADSR_03.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_CXF_10.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_CXF_10.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_DC5.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_DC5.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_KBD_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_KBD_03.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_LFO_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_LFO_00.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_SCP_01.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_SCP_01.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_SIN_01.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_SIN_01.jsfx-inc</source>
      </version>
    </reapack>
    <reapack name="TiaR_Shepard Paradoxical Synth.jsfx" type="effect" desc="Shepard Paradoxical Synth">
      <metadata>
        <link rel="website">http://stash.reaper.fm/v/22090/TiaR_SHP_synth_00.zip</link>
      </metadata>
      <version name="1.02" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth.jsfx</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_ADSR_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_ADSR_03.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_KBD_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_KBD_03.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_LFO_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_LFO_00.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_LPF_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_LPF_00.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_SHP_02.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_SHP_02.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_SLD_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_SLD_00.jsfx-inc</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze Cheesy Harmonic Synth.jsfx" type="effect" desc="Ze Cheesy Harmonic Synth">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 An additive synth based on Walsh functions\par}
}
]]></description>
      </metadata>
      <version name="0.2" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[+ improved keyboard (priority to last or highest note)
+ added    tremolo
+ added    ModWheel/Aftertouch vibrato depth
+ added    Pitch bend +- 1 octave
+ modified Seq gains can be negative (opposite phase)
+ modified Seq. init to fundamental seq]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Ze%20Cheesy%20Harmonic%20Synth.jsfx</source>
      </version>
      <version name="0.3" author="T.Rochebois" time="2016-08-14T20:23:36Z">
        <changelog><![CDATA[# Note off bug corrected
+ improved keyboard (priority to last or highest note)
+ added    tremolo
+ added    ModWheel/Aftertouch vibrato depth
+ added    Pitch bend +- 1 octave
+ modified Seq gains can be negative (opposite phase)
+ modified Seq. init to fundamental seq]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f51e3fcc00cf854983cf470e67c0bfd1c6a935ec/Synth/TiaR_Ze%20Cheesy%20Harmonic%20Synth.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze DigiThArmOrgan.jsfx" type="effect" desc="Ze DigiThArmOrgan">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Ze DigiThArmOrgan\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This is a fully polyphonic synthesizer based on Digital Harmonics i.e. Walsh functions. It features 3 detuned oscillator and a two pole low pass filter per voice. It is antialiased by third order integration/differentiation scheme.\par}
}
]]></description>
      </metadata>
      <version name="0.1" author="T.Rochebois" time="2016-09-12T21:18:14Z">
        <changelog><![CDATA[version 0.1 first release 12th september 2016]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f66440945bb5726d469f050032c6d37bf9f7ab59/Synth/TiaR_Ze%20DigiThArmOrgan.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze Musette Organ.jsfx" type="effect" desc="Ze Musette Organ">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Ze Musette Organ\par}
{\pard \ql \f0 \sa180 \li0 \fi0 An {\b easy to use} jsfx instrument reminiscent of some italian electronic organs of the late 70s.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Features\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Full polyphony}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Smooth sound\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Five tone "characters"\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Adjustable "brilliance"\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Vibrato controlled by the Modulation Wheel and Aftertouch\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab +- one octave pitch bend\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Anti aliased sound generation\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Stackable:\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Many Ze Musette Organ can be stacked, their outputs will be added together.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab different Gain and Pan settings can be used to widden the stereo field.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab The keyboard range for every Musette Organ can be set with transition zones.\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Controls:\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Character\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Brilliance\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Pan and Gain\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Transposition/Detune\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Vibrato depth\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Velocity sensitivity\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Attack, Decay, Sustain and Release\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Keyboard range (Low and High notes and transition zones).\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Optional Extension of MIDI control (since version 1.2):\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Attack is controlled by CC 73\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Decay is controlled by CC 75\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Sustain is controlled by CC 76\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Release is controlled by CC 72\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Brilliance is controlled by CC 74\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Character is controlled by CC 71\sa180\sa180\sa180\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-15T11:19:11Z">
        <changelog><![CDATA[+ ADSR enveloppe
+ Selectable velocity curve
# Brilliance and Character
+ modwheel Vibrato depth
+ After touch sensitive Vibrato speed
+ Pitch bend +-1 octave
+ Tremulant rate (detune between operators)
+ phase modulation synthesis (3 operators per note) 
+ Per note index limitation (anti aliasing)]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/b09371c49ff8d628d1d5cd7680ba906c5c6756b9/Synth/TiaR_Ze%20Musette%20Organ.jsfx</source>
      </version>
      <version name="1.1" author="T.Rochebois" time="2016-08-16T18:53:04Z">
        <changelog><![CDATA[# note off bug
+ ADSR enveloppe
+ Selectable velocity curve
# Brilliance and Character
+ modwheel Vibrato depth
+ After touch sensitive Vibrato speed
+ Pitch bend +-1 octave
+ Tremulant rate (detune between operators)
+ phase modulation synthesis (3 operators per note) 
+ Per note index limitation (anti aliasing)]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/86ab5336313da589bb54c8e2a42583fe827f1133/Synth/TiaR_Ze%20Musette%20Organ.jsfx</source>
      </version>
      <version name="1.2" author="T.Rochebois" time="2016-09-20T19:40:37Z">
        <changelog><![CDATA[version 1.2
# 4 New "Characters": Bell, Reed, Harmonica and Nasillard.
+ Velocity sensitive atteck time
+ MIDI control of A D S R Brilliance and Character (CC 73 75 76 72 74 and 71)
+ All notes off on play_state != 1 && play_state != 5
+ All notes off on "All Sounds Off" (CC 120)
version 1.1
# Off gate -20dB than before
version 1.02
+ ADSR enveloppe
+ Selectable velocity curve
# Brilliance and Character
+ modwheel Vibrato depth
+ After touch sensitive Vibrato speed
+ Pitch bend +-1 octave
+ Tremulant rate (detune between operators)
+ phase modulation synthesis (3 operators per note) 
+ Per note index limitation (anti aliasing)]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/b9dc7ab99b783fe5366863def0a9ef6798e67c06/Synth/TiaR_Ze%20Musette%20Organ.jsfx</source>
      </version>
    </reapack>
    <reapack name="TimeWaster_ReaRack Modular Synth.jsfx" type="effect" desc="ReaRack Modular Synth">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 ReaRack Modular Synth\par}
{\pard \ql \f0 \sa180 \li0 \fi0 ReaRack is a modular MIDI controlled digital synth system. There are currently 20 modules- Oscillator - Trapezoidal Oscillator - Twin-Saw Oscillator - Additive Oscillator - Noise LFO Envelope Generator Envelope Multi-Tool Filter Filter - Moog 24 db Amplifier MIDI mixer Trigger Key Follower Poly Splitter Sample and Hold MIDI Nonlinerizer Karplus-Strong Delay Note Filter Audio-MIDI converter Note Scope\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 User Guide\par}
{\pard \ql \f0 \sa180 \li0 \fi0 http://stash.reaper.fm/28621/ReaRack_Manual.pdf\par}
}
]]></description>
      </metadata>
      <version name="1.1" author="Malcolm Smith" time="2016-10-16T23:00:30Z">
        <changelog><![CDATA[See separate changelogs in each module]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Trigger.jsfx</source>
      </version>
      <version name="1.2" author="Malcolm Smith" time="2017-01-25T14:43:29Z">
        <changelog><![CDATA[See separate changelogs in each module]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack%20SampleAndHold.jsfx</source>
      </version>
      <version name="1.4" author="Malcolm Smith" time="2017-08-10T09:04:20Z">
        <changelog><![CDATA[See separate changelogs in each module]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2Max.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2Max.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO2.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/e0d1bca08a5af73257297556fcbb74f7b2ea5329/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack%20SampleAndHold.jsfx</source>
      </version>
      <version name="1.4.1" author="Malcolm Smith" time="2017-08-12T16:39:16Z">
        <changelog><![CDATA[See separate changelogs in each module]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2Max.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2Max.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO2.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/530670e87761888074855d9e76d62fc2ee51264e/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack%20SampleAndHold.jsfx</source>
      </version>
      <version name="1.4.2" author="Malcolm Smith" time="2017-08-23T04:57:22Z">
        <changelog><![CDATA[Bug fix for Additive Oscillator, the master/slave function was not working, now fixed.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2Max.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2Max.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO2.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/1474662fc8cfeecbe27847ef347eace2a2c98f4c/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack%20SampleAndHold.jsfx</source>
      </version>
      <version name="1.4.3" author="Malcolm Smith" time="2017-08-29T15:38:30Z">
        <changelog><![CDATA[Various bug fixes for LFO 2 frequency modulation function.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2Max.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2Max.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO2.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/63b9ae279e4a1eabdfd5104b25bced8a562bf79e/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack%20SampleAndHold.jsfx</source>
      </version>
      <version name="1.4.4" author="Malcolm Smith" time="2017-09-03T17:51:46Z">
        <changelog><![CDATA[Bug fixes for LFO 2, trapezoidal oscillator and additive oscillator.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen2Max.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen2Max.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO2.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO2.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/94ccb906ef7eb6392b8b7a7ece99de768eca7088/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.0.0" author="Malcolm Smith" time="2017-12-13T11:53:50Z">
        <changelog><![CDATA[All modules updated to version 2.0.0.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/dce7e605f690d487da4bc983d07fd157098ff214/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.0.1" author="Malcolm Smith" time="2018-01-16T10:03:06Z">
        <changelog><![CDATA[Version 2.0.1 - 16/01/2018 Added Moog Filter  module.
Version 2.0.0 - 12/12/2017 All modules updated to version 2.0.0.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/6c57c2543bb3df5e1c83e807e6366e513e99d24a/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.0.2" author="Malcolm Smith" time="2018-01-17T12:49:47Z">
        <changelog><![CDATA[Version 2.0.2 - 17/01/2018 Moog Filter module zipper noised fixed.
Version 2.0.1 - 16/01/2018 Added Moog Filter  module.
Version 2.0.0 - 12/12/2017 All modules updated to version 2.0.0.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/6ad76fa04939c5a2c70ab03b67b86960436472b6/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.1.0" author="Malcolm Smith" time="2018-02-14T10:46:09Z">
        <changelog><![CDATA[Version 2.1.0 - 14/02/2018 Added MIDI Nonlinearizer module. Added latch trigger mode
to envelope generator. Fixed a bug in envelope generator which prevented legato trigger
modes from working. 15 modules updated to improve CC encoding/decoding accuracy (bug led
to CC vales of 128 being output occasionally). Fixed a bug in CC Mixer module (wrong output
channel).]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 BezierEnvelope.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20BezierEnvelope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Nonlinearizer.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Nonlinearizer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/73384109969df820d753c9f766a081592b9926bf/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.2.0" author="Malcolm Smith" time="2018-02-21T15:55:36Z">
        <changelog><![CDATA[Version 2.2.0 - 21/02/2018 Important - Fixed a bug in CC Mixer module (no output).
                           Features added - Oscillators (except Noise) and KS Delay now
                           respond to MIDI pitch bend messages for pitch control. Pitch bend
                           and pitch modulation by CC can be summed together. Oscillators have
                           an additional 'Master pitch modulation range' slider.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 BezierEnvelope.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20BezierEnvelope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Nonlinearizer.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Nonlinearizer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/3f54bb063e39deb63f28a22a0fffc69cf090e82f/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.2.1" author="Malcolm Smith" time="2018-02-25T13:59:26Z">
        <changelog><![CDATA[Version 2.2.1 - 25/02/2018 Updated the Poly Splitter module to accept note-on with velocity = 0 as note-off.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 BezierEnvelope.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20BezierEnvelope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Nonlinearizer.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Nonlinearizer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/7e29ae8f8114202f71fd742a502cedd8d5585f89/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.3.0" author="Malcolm Smith" time="2018-07-25T15:34:55Z">
        <changelog><![CDATA[Version 2.3.0 - 25/07/2018 Added Envelope Multi-Tool & MIDI Mixer. Updated Non Lineraizer and Amplifier. Deleted CC Mixer.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvMultiTool.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvMultiTool.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 MIDImixer.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20MIDImixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Nonlinearizer.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Nonlinearizer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/d2e08834c948b45b31dbfa4a4014864e0697e690/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.3.1" author="Malcolm Smith" time="2018-07-31T10:04:32Z">
        <changelog><![CDATA[Version 2.3.1 - 31/07/2018 Envelope Multi-Tool bug fix.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvMultiTool.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvMultiTool.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 MIDImixer.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20MIDImixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Nonlinearizer.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Nonlinearizer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/46ad76bc53ca6af4f83a8234efc4618e8e3b0c1e/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.3.2" author="Malcolm Smith" time="2018-08-09T02:11:10Z">
        <changelog><![CDATA[Version 2.3.2 - 05/08/2018 Envelope Multi-Tool, changed Sustain Level control to Stage End Point Level control.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvMultiTool.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvMultiTool.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 MIDImixer.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20MIDImixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Nonlinearizer.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Nonlinearizer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/275d0c6245220d0755da287c4b4b0c196239db7d/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.3.3" author="Malcolm Smith" time="2018-09-01T01:56:06Z">
        <changelog><![CDATA[Version 2.3.3 - 01/09/2018 Improved Amlifier module. Minor graphics bug fix for MIDI Mixer module]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvMultiTool.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvMultiTool.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 MIDImixer.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20MIDImixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Nonlinearizer.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Nonlinearizer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/e4d071331338c98c6c16523d4c0b82358ad00c74/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
      <version name="2.3.4" author="Malcolm Smith" time="2018-09-01T10:53:18Z">
        <changelog><![CDATA[Version 2.3.4 - 01/09/2018 Envelope Multi-Tool bug fix, stage 1 bezier curve was functioning incorrectly.]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Audio-MIDI.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Audio-MIDI.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 EnvMultiTool.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20EnvMultiTool.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 FilterMoog24db.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20FilterMoog24db.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 MIDImixer.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20MIDImixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Nonlinearizer.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Nonlinearizer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteFilter.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteFilter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 NoteScope.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20NoteScope.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Additive.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Additive.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Noise.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Noise.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-Trapezoidal.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-Trapezoidal.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Oscillator-TwinSaw.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Oscillator-TwinSaw.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack2 Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack2%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack2 SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/ca40e6ce53e56bcddc146022454bccdb031c4427/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack2%20SampleAndHold.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Utility">
    <reapack name="CoreyScogin_AutoMixer.jsfx" type="effect" desc="AutoMixer">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 AutoMixer\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Based on the gain sharing automatic microphone mixing algorithm created by {\field{\*\fldinst{HYPERLINK "https://www.dandugan.com"}}{\fldrslt{\ul
Dan Dugan
}}}
, this plugin attenuates channels that are not in use helping to smoothly cut background noise and bleed. Useful for spoken word content.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Instructions\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Drop this plugin on each channel in the group.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Inactive channels will be attenuated helping to decrease background noise.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Multiple active channels will be attenuated according to the sum of all channels helping to keep the overall volume under control. See {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Automixer"}}{\fldrslt{\ul
Wikipedia
}}}
 for a more thorough description.\sa180\par}
}
]]></description>
        <link rel="website" href="https://forum.cockos.com/showthread.php?t=173289">Forum Thread</link>
      </metadata>
      <version name="1.1" author="Corey Scogin" time="2018-06-12T21:40:12Z">
        <changelog><![CDATA[Removed the linear to dB conversions. All attenuation values calculated directly now. 
Clear the buffer when the window changes. Keeping old buffer values would result in unexpected behavior. 
Added the freembuf call to indicate how much memory is used.]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/247f64ccae7c8d62f184ae6d4a515dda661cd406/Utility/CoreyScogin_AutoMixer.jsfx</source>
      </version>
    </reapack>
    <reapack name="CoreyScogin_TimeDelayByDistance.jsfx" type="effect" desc="Time Delay by Distance">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Time Delay by Distance\par}
{\pard \qc \f0 \sa180 \li0 \fi0 \emdash\emdash\emdash\emdash\emdash\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Delays a stereo or mono track by distance based on the approximate speed of sound through air at room temperature. This is a rough approximation of the speed of sound and should be pretty close enough for normal recording conditions.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Instructions\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Select your preferred units.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Set the distance to delay the audio.\sa180\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="Corey Scogin" time="2018-06-13T05:09:19Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/7f2f0c085b27393a6c642f3f6cffd8197aa4f262/Utility/CoreyScogin_TimeDelayByDistance.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_Dual Time adjustment.jsfx" type="effect" desc="Dual Time adjustment +/- Delay">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Apply a positive or negative delay to up tp two channel in a track modes:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Stereo: All Sliders ar coupled\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Dual: Two channels with two coupled sliders each\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Acknowlages:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Based on "Channel Time Delayer [LOSER]" by Michael Gruhn, 2007\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2017-12-03T07:54:52Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/279ccf5f5eab5f1cbd31068c5d6483964206131a/Utility/mschnell_Dual%20Time%20adjustment.jsfx</source>
      </version>
      <version name="1.1" author="Michael Schnell (mschnell@bschnell.de)" time="2018-02-05T16:08:54Z">
        <changelog><![CDATA[fix positive delays - Paweł Łyżwa (palyzwa@gmail.com)]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/c94c4a8bda06b37541da6cb151674fb446413947/Utility/mschnell_Dual%20Time%20adjustment.jsfx</source>
      </version>
      <version name="1.2" author="Michael Schnell (mschnell@bschnell.de)" time="2019-01-02T12:22:02Z">
        <changelog><![CDATA[add temperature slider and display in cm]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/1aa90ec2481a93ad11f1f9a409a1b9b70718b306/Utility/mschnell_Dual%20Time%20adjustment.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_Midi Auto Engage.jsfx" type="effect" desc="Midi Auto Engage">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Primary use: control on/off function of plugins that are controlled by a midi controller according to the value of the modulation CC that is sent to it.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The "Midi Channel" and "CC input" select the CC No to be adhered to.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The "CC Output" selects the CC No the on/off switch is to be accessed on. Only the values 0 and 127 will be sent out.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The "Threshold" and "Hysteresis" slider define the switching point and the dead zone that allows for safely switching. The "on" and "off dwell time" inhibit the appropriate switching to enhance the safety.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The "Output" selection allows for inverting the output. (This influences the selection of the dwell times.)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The "original CC" allows for stretching the selected range of the input CC before propagating it to a full range of 0 ... 127 when the input is within the zone to be selected.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A graph is displayed that shows lines for the input CC value (yellow) and the lower and upper switching limits (red). A green rectangle shows the current on/off state. If appropriate the stretching slope and the output CC value is shown.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="3.2" author="Michael Schnell (mschnell@bschnell.de)" time="2018-02-24T17:28:37Z">
        <changelog><![CDATA[initial release1]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/3595ffcaf00633ec9cdd314e78a7fcd23e00f6ad/Utility/mschnell_Midi%20Auto%20Engage.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_Midi CC Table.jsfx" type="effect" desc="Midi CC Table">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The JSFX receives Midi CC messages with a Midi channel and CC # defined by the sliders in the GUI. The value of this message selects a row in the active configuration file and according to this, up to 32 Midi CC message with channel, CC # and CC value as defined in that row are sent.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 In "Map" mode, the messages defined in the appropriate row are sent whenever a fitting message is received. In "Configs" mode a row is selected according to the received message. Messages are only sent when the selection is changed. Now the "deselect" messages of the previously selected row are sent and after that the "select" messages of the newly selected row are sent.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 You can define a "Delay" and a "No Delay" channel to send out messages in in sequenced way: Id delay is not zero, the messages to the "No Delay" channel are sent at once, the other messages are sent after the delay time has passed. The main purpose of the Delay feature is using this plugin for configuration of plugins in a channel: the channel needs to be unmuted (by an appropriate ReaSctipt) before the plugins in that channel arfe ready to accept Midi Messages.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "CC Table" selects the configuration file to be used. Same needs to be located in Reaper's "Data" folder (right besides "Effects") in a sub-folder "cc table", and needs to have the extension ".txt".\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "Function" selects the function mode to be "Map" or "Configs"\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "Input Channel" defines the Channel the messages to be adhered to are expected in.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "CC Input" defines the message # of the messages to be adhered to.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "No Delay Channel" defines the channel to vbe sent out without delay. (All other channels 2will be delayed)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "Delay" defines the send delay in milliseconds.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 File format\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Each line of the files defines a row in the mapping table. The first row will be accessed by a message with Value 0, the second row will be accessed by a message with Value 1, ...\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Each line can define messages to be sent when the row is accessed, and optionally messages that will be sent when the row is deseected. The "select" messages are defined first, and after a "<" character the "deselect" messages are defined.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Each message is defined by a block of characters, containing two or three decimal numbers). The message definitions aer separated by (one or more) blanks.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The message definitions start with the Midi channel followed by a colon (":"). The number after the colon defines the CC #. After the CC number optionally a "=" and a value definition can be set. if the "=" is missing, the value Zero is assumed.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Any character after (and including) a "/" in a line will be ignored as a comment.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Example:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 1:1=1 1:1=2 // CC value 0 2:2=2 // CC value 2 -> empty // CC value 3 3:3=1 3:3=2 3:3=3 3:3=4<10:11 15:127=127 7:7=2 7:7=3 7:7=4 7:7=5 7:7=6 7:7=7 7:7=8<16:124=125 9:9=9 15:127=127 7:7=2 7:7=3 7:7=4 7:7=5 7:7=6 7:7=7 7:7=8 < 16:124=125 9:9=9 <15:15=15 // CC value 7\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Graphics\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The graphics will show as many of the rows in the mapping table as possible. Empty rows are not shown.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 If "deselect" messages are defined the fields for that row will contain two lines.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The first column shows the CC to be received to select the row. The other columns how the messages to be sent.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 in "Configs" mode, the currently selected row is highlighted in yellow.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2018-03-29T05:47:14Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/fb32cf664c09c8d6f58ab8a4beefc512bd23d333/Utility/mschnell_Midi%20CC%20Table.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_MIDI CC2SYSEX.jsfx" type="effect" desc="MIDI CC to SysEx">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Up to three CC messages are converted to SysEx messages.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "CC SysEx" selects the file that is to contain the the definition of the SysEx messages. The file needs to be located in the Reaper folder "Data/cc sysex" and be named with a .txt extension. (File format see below)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "MIDI Input Channel" selects the channel on which all converted CCs are received.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The sliders "CC Input 1", "CC Input 2", and "CC Input 3" define the up to three messages to be converted.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Slider "All Messages": "Pass Through" -> all but the converted CC messages are passed through. "Block" -> only the SysEx Messages generated are sent.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A Graphic shows the op to three complete resulting SysEyx messages including header and trailer and the last inserted CC value.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 File format\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The configuration file can feature one, two or three lines. Accordingly there are one, two or three different CC messages to be converted to SysEx.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Each line consists of a series of up to 100 byte definitions, each of which is given by two hexadecimal digits and are separated by a space. A single of these definitions can optionally be be "XX" as a placeholder for the CC value to be transferred. The leading "F0" and trailing "F7" bytes necessary to form a SysEx message are not given, as the software inserts these automatically. (The bytes transferred in a SysEx message need to be lower or equal to 7f). Example : 00 21 10 78 3d 17 XX 7F\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Limitations\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The current version directly inserts the 7 bit CC value in the SysEx message. So higher resolution values are not supported.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Sometimes switching between different files does not work correctly. Pleas ctr-Click the enable box in the track's FX chain twice to see the correct new file.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2019-01-23T08:15:29Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/b8648ffe3bb379ca435a51ffe7506d0504c840d9/Utility/mschnell_MIDI%20CC2SYSEX.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_MIDI Convert to CC.jsfx" type="effect" desc="MIDI convert to CC">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Midi CC, PC, Note On, Note Off, Pitch Bend or After Touch messages are converted to Midi CC messages with a predefined Channel and CC #. The CC value is calculated from the incoming value.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 All midi messages that don't fit the "In" specifications are passed through.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "In Channel" defines the channel the messages to be converted are expected in. "all" accepts any channel.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "Midi Message" selects if CC, PC, Note on or Note Off (Note number), Note on or Note Off (velocity), or Pitch bend are to be converted. With Note off, also note on messages with velocity 0 are used. With "Note On Velocity" beware that some keyboards send Note On with velocity 0 as Note Off message, so set the Min Input Value to 1.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "In CC" is only used when "CC" is selected and defines the CC# of the eligible input messages.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The sliders "Min Input Value" and "Max Input Value" define the range of the eligible input values. When using Pitch Bend as an input, the full input rage is 0 .. 16383. This is shown as to 0 ... 127.9921875 (and 127 exactly is used as 127.9921875 for convenience), and it might make sense to type in an exact value.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "Out Channel" defines the channel the converted messages are sent in. "same as received" reproduces the channel as received, as well dedicated in channel mode as when setting the in channel to "all" .\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "Out CC" defines the Midi CC message # to be sent\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "Min CC Value" defines the value to be sent when the Min Input Value is received. Hence there will be an offset of Min_Input_Value - Min_Outout_Value.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "Max CC Value" defines the value to be sent when the Max Input Value is received. Hence there will be an appropriate stretching of the input range.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 TODO: hysteresis with Pitch Bend input; high resolution CC\par}
{\pard \ql \f0 \sa180 \li0 \fi0 (When testing beware that the JS: Midi Pitch Wheel LFO erroneously outputs Databyte 1 values > 127 ! )\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2018-04-01T05:37:58Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/b921919e9511e043edb5aa43e108307b217ccf19/Utility/mschnell_MIDI%20Convert%20to%20CC.jsfx</source>
      </version>
      <version name="2.0" author="Michael Schnell (mschnell@bschnell.de)" time="2018-08-19T21:57:33Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/32e3bc0d501d17e459536e90aca5caacd6731016/Utility/mschnell_MIDI%20Convert%20to%20CC.jsfx</source>
      </version>
      <version name="3.1" author="Michael Schnell (mschnell@bschnell.de)" time="2018-10-24T10:21:11Z">
        <changelog><![CDATA[added "all" input channel and "same as received" output channel setting, added Note On/Off Velocity and Pitch Bend as input source, pass through now optional, bugfixes]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/20f372998e85e03c3c76909a4d4dbdaf84269bb0/Utility/mschnell_MIDI%20Convert%20to%20CC.jsfx</source>
      </version>
      <version name="4.1" author="Michael Schnell (mschnell@bschnell.de)" time="2018-12-19T23:09:36Z">
        <changelog><![CDATA[added After Touch]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9d0d9992ad3360336e0b297a79c4a8c209023445/Utility/mschnell_MIDI%20Convert%20to%20CC.jsfx</source>
      </version>
      <version name="4.2" author="Michael Schnell (mschnell@bschnell.de)" time="2019-01-12T04:38:07Z">
        <changelog><![CDATA[Small Fixes]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/92a49eb8985a295979dd35947fc24f7a440cec2b/Utility/mschnell_MIDI%20Convert%20to%20CC.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_Midi Fade.jsfx" type="effect" desc="Midi Fade X">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The midi CC values 0 ... 127 are mapped to an "amplifier" curve that consists of a linear and an exponential part in a way, that with CC = 0 the amplification is 0 (-inf dB) and with CC = 127 the amplification is 1 (0db).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A slider defines the amount (in dB), the amplification is reduced with each CC step.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 According to that, the breakpoint between the exponential and the linear part is set so that at this point the value and the slope of the curves match.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Below the breakpoint, a linear curve is used so that with CC = 0 the amplification is Zero (-infinity dB).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Two sliders defines the maximum fade-in (up) and fade-out (down) speed the amplification is modulated. This is set in dB per modulation step. Moreover the maximum speed used is reaching a new defined level in as many steps a samples in a block.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The slider "start fade in" defines the starting point of the upwards move of the amplification. Same is given as the equivalent of an input CC value (1 ... 31)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The "Muting Notification" sets a CC # which is sent out with a value of "Muting Notification CC value", when the amplification drops below the mute level (equivalent to an input CC value of one tenth of that defined for "start fade in").\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The "send CC = 127" setting defines whether this CC is sent with value 127, when the amplification rises above the mute level or when it reaches 0 dB.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A graph shows as well the curve (linear, Amplification vs. CC steps), as the dynamic movement of the input CC and the amplification level.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Moreover, the fade in start and - if appropriate - the mute level is shown.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 If the "Muting Notification CC" is set, the mute state is visualized by a green rectangle.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Limitations\par}
{\pard \ql \f0 \sa180 \li0 \fi0 As due the the description above, the modulation speed is limited to reaching the target level in a timespan at least as the duration of a sample block, the current version of this plugin is not suitable for synth-like application that intend to implement a VCA.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.1" author="Michael Schnell (mschnell@bschnell.de)" time="2018-02-24T17:27:59Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/64f6efb468c4fe4f1c0478d6d42be89fb9fa345d/Utility/mschnell_Midi%20Fade.jsfx</source>
      </version>
      <version name="2.1" author="Michael Schnell (mschnell@bschnell.de)" time="2018-03-28T00:34:03Z">
        <changelog><![CDATA[Added Muting Notification CC value slider]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/98c128b768bb1c8ed1dbed002f441414b6813e5c/Utility/mschnell_Midi%20Fade.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_MIDI Trigger CC.jsfx" type="effect" desc="MIDI Trigger CC">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A Midi function testing utility. Usable e.g. as a "virtual Pedal Bar".\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Pushing one of the buttons 0 ... 9 will send a CC value as set in the "CC Val x" sliders with the Midi channel and CC # as set in the appropriate sliders\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2018-04-01T05:39:31Z">
        <changelog><![CDATA[Added Muting Notification CC value slider]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/966e57c82d5d555d55880143ac1114611df30dbd/Utility/mschnell_MIDI%20Trigger%20CC.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_MIDI Volume Control.jsfx" type="effect" desc="Midi Volume Control">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The midi CC values 0 ... 127 are mapped to an "amplifier" curve that consists of a linear and an exponential part in a way, that with CC = 0 the amplification is 0 (-inf dB) and with CC = 127 the amplification is 1 (0db).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A slider defines the amount (in dB), the amplification is reduced with each CC step.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 According to that, the breakpoint between the exponential and the linear part is set so that at this point the value and the slope of the curves match.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Below the breakpoint, a linear curve is used so that with CC = 0 the amplification is Zero (-infinity dB).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Another slider defines the maximum speed the amplification is modulated. This is set in dB per modulation step.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Moreover the maximum speed used is reaching a new defined level in as many steps a samples in a block.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The "Default Value" is used as a CC input when the plugin is loaded, when playback is started and when this slider is modified either by hand or by automation.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A graph shows as well the curve (Amplification vs CC steps), as the dynamic movement of the amplification level.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Limitations\par}
{\pard \ql \f0 \sa180 \li0 \fi0 As due the the description above, the modulation speed is limited to reaching the target level in a timespan at least as the duration of a sample block, the current version of this plugin is not suitable for synth-like application that intend to implement a VCA.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2016-10-10T20:08:03Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/c8ab3584eea4e9532c9aa37eab1cfc5a5f9406b7/Utility/mschnell_MIDI%20Volume%20Control.jsfx</source>
      </version>
      <version name="2.0" author="Michael Schnell (mschnell@bschnell.de)" time="2018-12-09T15:41:55Z">
        <changelog><![CDATA[add "Default CC Value" slider]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/34bd46882c95dda1ac35e39b4885d585689e5711/Utility/mschnell_MIDI%20Volume%20Control.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_Multi_Sin_Generator.jsfx" type="effect" desc="Multi Sine Generator">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Multi Sine Generator generates multiple sine waves with a definable low and high frequency limit and density.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 To analyze the frequency response of a hardware or software device, you usually use white or pink noise.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The noise generated by appropriate hardware or software by design is random and not periodic. This is because the long term spectrum of a noise generator is supposed to be continuous. In some cases this behavior is not desired.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The Multi Sin Generator creates a deterministic periodic signal with similar properties instead, but therefor, the spectrum of course is discrete.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 You can set the lowest frequency that is used as a base for the multiple sinus generators, and you can set the highest frequency that is supposed to created.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 You can set the density between one and 32 tones per octave, "1" meaning just octaves, "2" gives a tritone, "3" an augmented triad, "4" a diminished chord, "12" all semitones, "24" quarter-tones etc. The frequencies are generated in exponentially equal "well tempered" distances and rounded to integer multiples of the sampling frequency.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The amplitude relations of the sine waves can be set to "equal amplitudes" or to approximately match the spectrum of either white or pink noise.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The output volume is 100% = 0dB peak and can be set to 0 ... 100 %\par}
{\pard \ql \f0 \sa180 \li0 \fi0 After setting the parameters, the period duration and (if appropriate) the period frequency of the resulting signal is displayed.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 To reduce the period time of the signal the parameter "Period Reduction" can be set greater than one. This forces the resulting frequencies in a raster of the given count of samples.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2018-08-18T19:27:08Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/eb173d02c6007e832f745ce16d56ce765c29bad7/Utility/mschnell_Multi_Sin_Generator.jsfx</source>
      </version>
      <version name="1.1" author="Michael Schnell (mschnell@bschnell.de)" time="2018-08-23T06:07:00Z">
        <changelog><![CDATA[workaround for freezing when Reaper looses the GUI focus, deterministic volume normalizing]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/aeaa9a26abe4e5729e7def0a39532eba088db296/Utility/mschnell_Multi_Sin_Generator.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_Slider to Midi PS.jsfx" type="effect" desc="Slider to Midi PS">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 While the VST/Reaper-Plugin "MIDItoReaControlPath" can transfer live Midi data from a track to the "guts" of Reaper to be handled by Reaper Extensions and ReaScripts, Slider_to_Midi_PS is supposed to work the other way round and generate Midi messages in a track on request of Reaper Extensions (such as SWS "LiveConfigs") and ReaScripts. The Midi "Program Change" Messages can be used to switch the patch of appropriate plugins that internally hold a list of multiple patches (aka "programs", "sounds", "instruments"...) Whenever the "PS" slider is moved (manually or by a preset change), Slider to Midi PS sends out the appropriate Midi PS message exactly once. Slider to Midi PS passes through all midi messages it receives.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Main Purpose\par}
{\pard \ql \f0 \sa180 \li0 \fi0 With many VSTs (e.g. Kontakt), switching patches is a lot faster than loading a new preset for the VST itself. Moreover it preserves internal states, that would be reloaded with a new preset.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Usage\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The JSFX plugin "Slider to Midi PS" is placed in the track "above" plugin that is supposed to react on the program change request. Usually you statically set the Midi channel that the VST reacts to. Now (for each instance you created) you generate multiple presets, one for each program change (patch) number you want to send. With appropriate Reaper Actions / Scripts - or with SWS LiveConfigs - you can request a preset change for a Slider to Midi PS instance and hence a Midi PS Message will be generated in that track.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Possible Extension\par}
{\pard \ql \f0 \sa180 \li0 \fi0 It would be rather easy to extend the plugin to optionally send out CC ore Note On messages.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2016-10-21T17:50:51Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/ce5f775585f977c96e98aa22e6c7c557a12e48c5/Utility/mschnell_Slider%20to%20Midi%20PS.jsfx</source>
      </version>
    </reapack>
    <reapack name="nofish_Volume utility +-10db (sample accurate automation).jsfx" type="effect" desc="Volume utility +-10db (sample accurate automation)">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 simple volume adjustment utility modded from Cockos "Volume/Pan Smoother v5" JS I like to use this one for volume automation instead of Reaper's native volume envelope because\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab I rarely make changes > +- 10db so it gives me more 'resolution' in the envelope\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Reaper's fader are kept free for trim adjustments\sa180\par}
}
]]></description>
        <link rel="website">http://forum.cockos.com/member.php?u=6870</link>
      </metadata>
      <version name="1.0" author="Cockos, mod by nofish" time="2016-12-30T00:04:06Z">
        <changelog><![CDATA[version 1.0
+ initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/2e2341f8d03374a1b29eb2f12f25f751856266d0/Utility/nofish_Volume%20utility%20+-10db%20(sample%20accurate%20automation).jsfx</source>
      </version>
    </reapack>
    <reapack name="ReaperBlog_-12dB Dim.jsfx" type="effect" desc="-12dB Dim">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 No controls needed, shift-click the plugin from the mixer to disable.\line Insert on master as a secondary monitor reference level.\line Insert after a particularly loud plugin to get closer to sensible levels.\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="The REAPER Blog" time="2016-08-08T14:07:30Z">
        <changelog><![CDATA[Initial Release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Utility/ReaperBlog_-12dB%20Dim.jsfx</source>
      </version>
    </reapack>
    <reapack name="ReaperBlog_Macro Controller.jsfx" type="effect" desc="Macro controller">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Dummy controls to use with Parameter link/modulation\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="The REAPER Blog" time="2018-03-14T19:36:01Z">
        <changelog><![CDATA[+ Initial Release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/82faf67f48b2c7cac642ae097688e970d6e35bd8/Utility/ReaperBlog_Macro%20Controller.jsfx</source>
      </version>
    </reapack>
    <reapack name="ReaperBlog_Multichannel Volume Trim 2.jsfx" type="effect" desc="single fader to trim 32-channels by same amount">
      <metadata>
        <link rel="website">https://forum.cockos.com/showthread.php?t=205533</link>
        <link rel="website">https://reaperblog.net/2018/04/multichannel-volume-trimming/ ‎</link>
      </metadata>
      <version name="1.0" author="REAPER Blog" time="2018-04-27T16:20:04Z">
        <source>https://github.com/ReaTeam/JSFX/raw/4d2c42a984bd4d4ee5aadf068b643041b2868855/Utility/ReaperBlog_Multichannel%20Volume%20Trim%202.jsfx</source>
      </version>
    </reapack>
    <reapack name="ReaperBlog_Multichannel Volume Trim.jsfx" type="effect" desc="Faders to trim 32-channels by same amount in stereo pairs">
      <metadata>
        <link rel="website">https://forum.cockos.com/showthread.php?t=205533</link>
        <link rel="website">https://reaperblog.net/2018/04/multichannel-volume-trimming/ ‎</link>
      </metadata>
      <version name="1.0" author="REAPER Blog" time="2018-04-27T16:20:04Z">
        <source>https://github.com/ReaTeam/JSFX/raw/4d2c42a984bd4d4ee5aadf068b643041b2868855/Utility/ReaperBlog_Multichannel%20Volume%20Trim.jsfx</source>
      </version>
    </reapack>
  </category>
  <metadata>
    <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 ReaTeam JSFX Repository\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\field{\*\fldinst{HYPERLINK "https://travis-ci.org/ReaTeam/JSFX"}}{\fldrslt{\ul
{\cf1 [image: https://travis-ci.org/ReaTeam/JSFX.svg?branch=master]\cf0}
}}}
\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Community-maintained collection of JS effects for REAPER.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Installation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Copy and paste this URL in Extensions > ReaPack > Import a repository:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 https://github.com/ReaTeam/JSFX/raw/master/index.xml\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Contributing\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Use {\field{\*\fldinst{HYPERLINK "https://reapack.com/upload/jsfx"}}{\fldrslt{\ul
https://reapack.com/upload/jsfx
}}}
 to upload your JS effects on this repository.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Have a question? Come discuss in the {\field{\*\fldinst{HYPERLINK "https://forum.cockos.com/showthread.php?t=169127"}}{\fldrslt{\ul
development thread
}}}
.\par}
}
]]></description>
  </metadata>
</index>
