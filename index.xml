<?xml version="1.0" encoding="utf-8"?>
<index version="1" name="ReaTeam JSFX" commit="c007e71f7caeed0d85a3bb665fd092540e228798">
  <category name="Analysis">
    <reapack name="anomaly_Skope.jsfx" type="effect" desc="Skope">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Skope II is an oscilloscope plugin for Reaper. 4 Channels. Buffer size up to 10 seconds. Trigger from any input channel, or all of them. Click Middle mouse button on display to quickly set the threshold. Two Y-axis markers. Click SHIFT+LMB or CTRL+LMB on display to quickly set. Markers can be set automatically to the highest peak value of display buffer using SHIFT+ALT+LMB and CTRL+ALT+LMB 'Display Align' will gradually set input channels into separate lanes. With LMB pressed you can paint X-axis and information will be displayed. RMB will clear the display.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="2.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Analysis/anomaly_Skope.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Delay">
    <reapack name="anomaly_LeetDelay.jsfx" type="effect" desc="LeetDelay">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Leet Delay is a delay with character. Option to sync with host tempo. Delay time 1-2000ms. Color slider adjusts the feedback tone. Can create self oscillating infinite loop.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Delay/anomaly_LeetDelay.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Distortion">
    <reapack name="anomaly_Growl.jsfx" type="effect" desc="Growl">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Growl was born by an accident. It is a lo-fi effect that sounds like a bad radio transmission. Somehow it's mesmerizing... Destroys everything. Sounds cool with drum loops and vocals. A resonating Low-pass filter which frequency can be modulated by input signal. A compander adds even more crunch.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Distortion/anomaly_Growl.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze Morpho Dist.jsfx" type="effect" desc="Ze Morpho Dist">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This is a LFO controlled Stereo Distortion Effect\par}
}
]]></description>
        <link rel="website">http://forum.cockos.com/showthread.php?t=173611</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-08T20:52:46Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Distortion/TiaR_Ze%20Morpho%20Dist.jsfx</source>
        <source file="TiaR_Ze Morpho Dist/ZeMorphoDistIII.RPL">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Distortion/TiaR_Ze%20Morpho%20Dist/ZeMorphoDistIII.RPL</source>
      </version>
    </reapack>
  </category>
  <category name="Dynamics">
    <reapack name="anomaly_5.1 Hybrid Bus Compressor.jsfx" type="effect" desc="5.1 Hybrid Bus Compressor">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 5.1 Hybrid Bus Compressor is yet another dynamics tool you can find on this page. It uses both peak & RMS detectors simultaneously and the resulting effect is quite pleasant and transparent. The RMS component helps with the signal levelling purposes better than using a peak method alone. There is no abundance of 5.1 capable compressors out there, but now here's one more, for free. It doesn't really matter to use it for stereo applications as well, but for convenience there is also a stereo version of the same thing. Reaper 4.59+ required. Simultaneous peak & RMS detectors. RMST for fine tuning the RMS timing independently from the peak part. RMSM for adjusting the RMS/peak component mixture. Auto-release. Release slider sets the starting point. Threshold group & output group faders for fast overall adjustments.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_5.1%20Hybrid%20Bus%20Compressor.jsfx</source>
        <source file="anomaly_5.1 Hybrid Bus Compressor/liuku.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_5.1%20Hybrid%20Bus%20Compressor/liuku.png</source>
        <source file="anomaly_5.1 Hybrid Bus Compressor/liuku2.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_5.1%20Hybrid%20Bus%20Compressor/liuku2.png</source>
        <source file="anomaly_5.1 Hybrid Bus Compressor/sm_liuku.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_5.1%20Hybrid%20Bus%20Compressor/sm_liuku.png</source>
        <source file="anomaly_5.1 Hybrid Bus Compressor/switch.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_5.1%20Hybrid%20Bus%20Compressor/switch.png</source>
      </version>
    </reapack>
    <reapack name="anomaly_5.1 Master Limiter.jsfx" type="effect" desc="5.1 Master Limiter">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 5.1 Master Limiter is a 5.1 surround capable limiter/leveler/loudness maximizer for the master channel. Using this on 2-channel setup is not a problem either. Unused channels will not be processed, thus saving CPU. Supports all sample rates. Weight controls for maintaining balance between channels with 5.1 material. Response control: Small values give more hard limiter type sound and max output. The larger values engage more softer, leveler type behavior. Dual metering: Green bar corresponds to the gain reduction while blue shows the channel RMS output. Two operating modes: The Classic limiter mode acts as a traditional downward limiter with a threshold. The Loudness maximizer mode maximizes the output volume as expected in mastering applications. There is no other sonic differences between them.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_5.1%20Master%20Limiter.jsfx</source>
        <source file="anomaly_5.1 Master Limiter/5.1 Master Limiter.pdf">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_5.1%20Master%20Limiter/5.1%20Master%20Limiter.pdf</source>
      </version>
    </reapack>
    <reapack name="anomaly_7.1 Master Limiter.jsfx" type="effect" desc="7.1 Master Limiter">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 7.1 Master Limiter is a 7.1 surround capable limiter/leveler/loudness maximizer for the master channel. Using this on 2-channel setup is not a problem either. Unused channels will not be processed, thus saving CPU. Supports all sample rates. Weight controls for maintaining balance between channels with 7.1 material. Response control: Small values give more hard limiter type sound and max output. The larger values engage more softer, leveler type behavior. Dual metering: Green bar corresponds to the gain reduction while blue shows the channel RMS output. Two operating modes: The Classic limiter mode acts as a traditional downward limiter with a threshold. The Loudness maximizer mode maximizes the output volume as expected in mastering applications. There is no other sonic differences between them.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_7.1%20Master%20Limiter.jsfx</source>
        <source file="anomaly_7.1 Master Limiter/5.1 Master Limiter.pdf">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_7.1%20Master%20Limiter/5.1%20Master%20Limiter.pdf</source>
      </version>
    </reapack>
    <reapack name="anomaly_SEG Gate.jsfx" type="effect" desc="SEG">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 SEG is a simple expander/gate with smooth and seamless operation. True stereo operation (independent detectors for L & R). Adjustable attack & release time. Signal above the threshold will get always thru (gate open). Signal below the threshold is treated with downwards expander. Ratio controls the behaviour between expander and gate. Adjustable detector LP & HP filter. Gate open & close indicators. Pre-gate option for better transient preservation\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_SEG%20Gate.jsfx</source>
      </version>
    </reapack>
    <reapack name="anomaly_SEGX2 Gate.jsfx" type="effect" desc="SEGX2">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 SEG is a simple expander/gate with smooth and seamless operation. True stereo operation (independent detectors for L & R). Adjustable attack & release time. Signal above the threshold will get always thru (gate open). Signal below the threshold is treated with downwards expander. Ratio controls the behaviour between expander and gate. Adjustable detector LP & HP filter. Gate open & close indicators. Pre-gate option for better transient preservation SEGX2 is a multi band version of SEG. It uses 6dB/octave filters which are quite non-destructive for phase response. In addition to SEG: Independent release times for lo & hi band Independent threshold for lo & hi band\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_SEGX2%20Gate.jsfx</source>
      </version>
    </reapack>
    <reapack name="anomaly_Stereo Hybrid Bus Compressor.jsfx" type="effect" desc="Stereo Hybrid Bus Compressor">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 5.1 Hybrid Bus Compressor is yet another dynamics tool you can find on this page. It uses both peak & RMS detectors simultaneously and the resulting effect is quite pleasant and transparent. The RMS component helps with the signal levelling purposes better than using a peak method alone. There is no abundance of 5.1 capable compressors out there, but now here's one more, for free. It doesn't really matter to use it for stereo applications as well, but for convenience there is also a stereo version of the same thing. Reaper 4.59+ required. Simultaneous peak & RMS detectors. RMST for fine tuning the RMS timing independently from the peak part. RMSM for adjusting the RMS/peak component mixture. Auto-release. Release slider sets the starting point. Threshold group & output group faders for fast overall adjustments.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_Stereo%20Hybrid%20Bus%20Compressor.jsfx</source>
        <source file="anomaly_Stereo Hybrid Bus Compressor/liuku.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_Stereo%20Hybrid%20Bus%20Compressor/liuku.png</source>
        <source file="anomaly_Stereo Hybrid Bus Compressor/liuku2.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_Stereo%20Hybrid%20Bus%20Compressor/liuku2.png</source>
        <source file="anomaly_Stereo Hybrid Bus Compressor/sm_liuku.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_Stereo%20Hybrid%20Bus%20Compressor/sm_liuku.png</source>
        <source file="anomaly_Stereo Hybrid Bus Compressor/switch.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_Stereo%20Hybrid%20Bus%20Compressor/switch.png</source>
      </version>
    </reapack>
    <reapack name="anomaly_Transpire.jsfx" type="effect" desc="Transpire">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Transpire is a classic transient tampering device for percussive material. I wanted to make one that would not sound too distorted. Attack & sustain enhancing or dampening\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_Transpire.jsfx</source>
      </version>
    </reapack>
    <reapack name="anomaly_TriLeveler.jsfx" type="effect" desc="TriLeveler">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Trileveler is an ultimate broadcast voice leveler. It offers three RMS driven dynamics sections chained in series. Each section has a slightly different purpose in the chain. When signal progresses from section to next, it becomes more and more compressed and tied to the target level. Please notice: TriLeveler is designed to work with broadcast voice. It may not work very well with other sources, like musical instruments or full mixes. Excellent leveling performance & transparency. Comes with a user manual where the operation is explained in detail.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_TriLeveler.jsfx</source>
        <source file="anomaly_TriLeveler/TriLeveler.pdf">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_TriLeveler/TriLeveler.pdf</source>
      </version>
    </reapack>
    <reapack name="anomaly_VCX Retro Compressor.jsfx" type="effect" desc="VCX Retro Compressor">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 VCX Retro compressor - as the name suggests - is a retro style compressor. It does not try to emulate analog circuits. But it has it's own sound. VCX codebase has been completely refactored by Connor O. Likes to be punished. High gain values cause saturation. Fattening effect.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_VCX%20Retro%20Compressor.jsfx</source>
        <source file="anomaly_VCX Retro Compressor/chicken_knob.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_VCX%20Retro%20Compressor/chicken_knob.png</source>
        <source file="anomaly_VCX Retro Compressor/vcbg.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_VCX%20Retro%20Compressor/vcbg.png</source>
        <source file="anomaly_VCX Retro Compressor/vu.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_VCX%20Retro%20Compressor/vu.png</source>
      </version>
    </reapack>
    <reapack name="anomaly_VOLA-EX.jsfx" type="effect" desc="VOLA-EX">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 VOLA-EX is an RMS leveller which is intended for broadcast voice processing, but you are free to experiment with it. Please notice that VOLA-EX has been made obsolete by Trileveler (vst).\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_VOLA-EX.jsfx</source>
      </version>
    </reapack>
    <reapack name="anomaly_VOLA.jsfx" type="effect" desc="VOLA">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 VOLA - Voice Optimized Leveling Amplifier, as the name suggests, was originally made for broadcast voice dynamics processing. But it works well with all kinds of material, like drums and synth pads. VOLA aims to sound clean and transparent, but can be used for extreme compression effects as well. Upwards & downwards compression, each separately adjustable. Very soft knee compression gradually turning to limiting at "Push Down" point. Handles broad dynamic range easily. Recovery time tunes the program dependent reaction speed. Longer (negative) recovery time helps keeping the noise down in program material while using upwards compression. Various attack presets for different processing styles. Visual gain reduction/increase metering displays changes over time. Statistics display.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Dynamics/anomaly_VOLA.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Filter">
    <reapack name="TiaR_Lattice Filter.jsfx" type="effect" desc="Lattice Filter">
      <version name="1.0" author="T.Rochebois" time="2016-08-08T20:46:50Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Filter/TiaR_Lattice%20Filter.jsfx</source>
        <source file="TiaR_Lattice Filter/TiaR_LFX_01.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Filter/TiaR_Lattice%20Filter/TiaR_LFX_01.jsfx-inc</source>
      </version>
    </reapack>
  </category>
  <category name="Guitar">
    <reapack name="anomaly_Bass professor MK2.jsfx" type="effect" desc="Bass professor MK2">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Bass Professor Mark II is a sound shaping suite for a bass guitar. It can be used for changing a dull DI recorded signal into a powerfull amped-like bass sound with lots of character. Bass Professor Mark II offers dynamics processing, eq and a ruff distortion specifically suited for bass guitar. Bass Professor Mark II is not a replacement for the first generation of Bass Professor. It is meant to be an alternative for those situations (but not limited to) where more neutral and less colored bass sound is prefered. The GUI was designed by crimsonmerry.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bass%20professor%20MK2.jsfx</source>
        <source file="anomaly_Bass professor MK2/Bass Professor Mark II.pdf">https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bass%20professor%20MK2/Bass%20Professor%20Mark%20II.pdf</source>
        <source file="anomaly_Bass professor MK2/bg.png">https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bass%20professor%20MK2/bg.png</source>
        <source file="anomaly_Bass professor MK2/vsliderhandle.png">https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bass%20professor%20MK2/vsliderhandle.png</source>
      </version>
    </reapack>
    <reapack name="anomaly_Bassprofessor.jsfx" type="effect" desc="Bassprofessor">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Bassprofessor is aimed at bass guitar players. It turns your raw line sound into something more interesting. It colours signal quite a bit, but in a pleasant way for bass guitar. If you are looking for a transparent effect, perhaps look somewhere else. The GUI was designed by crimsonmerry. 4-band signal leveler. Automatic peak limiter. Presence adds some intimacy. 3-band eq with suitable tunings for bass. Asymmetric boost & cut. Dirt knob for overdrive effect. Destroys everything save bass guitar.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-23T01:51:05Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bassprofessor.jsfx</source>
        <source file="anomaly_Bassprofessor/bg.png">https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bassprofessor/bg.png</source>
        <source file="anomaly_Bassprofessor/knob.png">https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bassprofessor/knob.png</source>
        <source file="anomaly_Bassprofessor/knob2.png">https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bassprofessor/knob2.png</source>
        <source file="anomaly_Bassprofessor/knob3.png">https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bassprofessor/knob3.png</source>
        <source file="anomaly_Bassprofessor/led.png">https://github.com/ReaTeam/JSFX/raw/5e2edee646a858d3c463ff7d707dcf3832095118/Guitar/anomaly_Bassprofessor/led.png</source>
      </version>
    </reapack>
  </category>
  <category name="MIDI">
    <reapack name="cfillion_MIDI Note Length Control.jsfx" type="effect" desc="MIDI Note Length Control">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 MIDI Note Length Control\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Set a minimum length in beats and/or a maximum length to incoming MIDI notes. This plugin supports input channel selection and choosing a range of notes on which to apply the processing on.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Putting the minimum or maximum length sliders to 0 will disable that specific feature.\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="cfillion" time="2017-04-21T19:20:48Z">
        <source>https://github.com/ReaTeam/JSFX/raw/b858e8ace51ac0be8d0cbb0d995ca8efa82175f4/MIDI/cfillion_MIDI%20Note%20Length%20Control.jsfx</source>
      </version>
      <version name="1.0.1" author="cfillion" time="2017-04-23T15:29:14Z">
        <changelog><![CDATA[Fix for subsequent notes being cut early.]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/b95520767d8de9aa7ae8b79a63e443a30f9e0ac9/MIDI/cfillion_MIDI%20Note%20Length%20Control.jsfx</source>
      </version>
    </reapack>
    <reapack name="cfillion_Note Duplicator.jsfx" type="effect" desc="Note Duplicator">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Note Duplicator\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This effect repeats the previous MIDI notes when they are released, preserving the original duration. Useful for playing 16th notes while actually only playing 8th on the keyboard.\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="cfillion" time="2017-03-22T21:49:14Z">
        <source>https://github.com/ReaTeam/JSFX/raw/f5af11d7b40782c8078ef8ba468732e8b1872dde/MIDI/cfillion_Note%20Duplicator.jsfx</source>
      </version>
    </reapack>
    <reapack name="mathphreak_Learningbaby.jsfx" type="effect" desc="Learningbaby">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Learningbaby\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The Learningbaby is a Sequencer Baby v2 that learns. It will add incoming MIDI notes to the pattern.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Video demonstration/tutorial {\field{\*\fldinst{HYPERLINK "https://youtu.be/dMTiWafJFmg"}}{\fldrslt{\ul
here
}}}
.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b NOTE:} If you use automation to change the selected pattern, you will get incorrect results. Change the "Next Pattern" during a loop and you'll get a correct transition.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Features added to Sequencer Baby v2:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Select between retriggering notes if sequenced on adjacent ticks and extending (retriggering makes sense for drums, extending for everything else)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Clear current pattern by just moving a slider\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Better automated pattern switching\sa180\par}
}
]]></description>
        <link rel="website" href="http://forum.cockos.com/showthread.php?p=1845408">Forum Thread</link>
        <link rel="website" href="https://youtu.be/dMTiWafJFmg">Video demonstration/tutorial</link>
      </metadata>
      <version name="1.0" author="Matt Horn" time="2017-05-17T06:09:39Z">
        <changelog><![CDATA[- Released Learningbaby]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/6fee80c6f700aac85ae85bbfb1fde81ee8b5d639/MIDI/mathphreak_Learningbaby.jsfx</source>
      </version>
      <version name="2.0" author="Matt Horn" time="2017-06-14T00:59:38Z">
        <changelog><![CDATA[- Added "Next Pattern" for better automation of pattern switching]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/c007e71f7caeed0d85a3bb665fd092540e228798/MIDI/mathphreak_Learningbaby.jsfx</source>
      </version>
    </reapack>
    <reapack name="mpl_Reaktor Blocks PitchGate to MIDI.jsfx" type="effect" desc="Reaktor Blocks PitchGate to MIDI">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 I wrote this JSFX for using Reaktor Blocks sequencers with regular VST plugins. It uses left and right audio inputs for pitch CV and gate impulses respectively. Thanks to Eugen27771 for help with MIDI timing issues!\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="MPL" time="2017-06-12T18:41:24Z">
        <changelog><![CDATA[init]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/00242ec931900ddb5eb21c174dca5181b600b2b1/MIDI/mpl_Reaktor%20Blocks%20PitchGate%20to%20MIDI.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Misc">
    <reapack name="TiaR_PM_Resynth.jsfx" type="effect" desc="MIDI PM Resynth">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This is an experimental midi controlled effect. So, even if its internals ar synth like, it needs an audio input (a synth, a chaos oscillator, an audio track) and midi control.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The incoming signal is sampled, windowed, phase modulated and looped and crossfaded with incoming signal that is again sampled, windowed phase modulated and looped and crossfaded with incoming signal that is again sampled, windowed phase modulated and looped and crossfaded. until you stop pressing the keys.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 So the output pitch is controlled by the keyboard, whatever the incoming signal is.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Feed it with whatever you want.\par}
}
]]></description>
        <link rel="website">http://stash.reaper.fm/v/22117/TiaR_PM_Resynth.zip</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Misc/TiaR_PM_Resynth.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Modulation">
    <reapack name="TiaR_ChopChop.jsfx" type="effect" desc="Stereo Chop chop">
      <metadata>
        <link rel="website">https://www.youtube.com/watch?v=LHbSUXsJ82M</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-20T19:09:22Z">
        <changelog><![CDATA[Initial Release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/7691aab88e23bba10e4e17c7915f3563654dd3b9/Modulation/TiaR_ChopChop.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze Big Chorus.jsfx" type="effect" desc="Ze Big Chorus">
      <version name="1.0" author="T.Rochebois" time="2016-08-08T20:46:50Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Big%20Chorus.jsfx</source>
        <source file="TiaR_Ze Big Chorus/TiaR_SCP_01.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Big%20Chorus/TiaR_SCP_01.jsfx-inc</source>
        <source file="TiaR_Ze Big Chorus/TiaR_ZeBigChorus_03.RPL">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Big%20Chorus/TiaR_ZeBigChorus_03.RPL</source>
        <source file="TiaR_Ze Big Chorus/TiaR_ZeBigChorus_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Big%20Chorus/TiaR_ZeBigChorus_03.jsfx-inc</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze Little Scanner Chorus.jsfx" type="effect" desc="Ze Scanner Chorus">
      <version name="1.06" author="T.Rochebois" time="2016-08-08T20:46:50Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Modulation/TiaR_Ze%20Little%20Scanner%20Chorus.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Reverb">
    <reapack name="TiaR_HadamVerb.jsfx" type="effect" desc="Hadamard Variable Delay Array">
      <metadata>
        <link rel="website">http://stash.reaper.fm/v/23730/TiaR_HadamVerb.zip</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Reverb/TiaR_HadamVerb.jsfx</source>
        <source file="TiaR_HadamVerb/HadamVerb.RPL">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Reverb/TiaR_HadamVerb/HadamVerb.RPL</source>
        <source file="TiaR_HadamVerb/TiaR_HAD_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Reverb/TiaR_HadamVerb/TiaR_HAD_00.jsfx-inc</source>
      </version>
    </reapack>
  </category>
  <category name="Synth">
    <reapack name="TiaR_2op PM Synth.jsfx" type="effect" desc="2op PM Synth">
      <metadata>
        <link rel="website">http://forum.cockos.com/showthread.php?p=1385314&amp;posted=1#post1385314</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth.jsfx</source>
        <source file="TiaR_2op PM Synth/TiaR_ADSR.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_ADSR.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_HSL.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_HSL.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_KBD.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_KBD.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_LFO.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_LFO.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_PMX.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_PMX.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_PMXsliders.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_PMXsliders.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_SCH.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_SCH.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/TiaR_Scope.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/TiaR_Scope.jsfx-inc</source>
        <source file="TiaR_2op PM Synth/js-TiaR_PMX_js.ini">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_2op%20PM%20Synth/js-TiaR_PMX_js.ini</source>
      </version>
    </reapack>
    <reapack name="TiaR_Chua Oscillator.jsfx" type="effect" desc="Chua Oscillator">
      <metadata>
        <link rel="website">http://stash.reaper.fm/v/21646/TiaR_chua_02.zip</link>
      </metadata>
      <version name="0.2" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Chua%20Oscillator.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_Complex X Filter Synth.jsfx" type="effect" desc="Complex X Filter Synth">
      <metadata>
        <link rel="website">http://stash.reaper.fm/v/22067/TiaR_CXF_synth_deluxe.zip</link>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-08T20:59:58Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth.jsfx</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_ADSR_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_ADSR_03.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_CXF_10.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_CXF_10.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_DC5.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_DC5.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_KBD_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_KBD_03.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_LFO_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_LFO_00.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_SCP_01.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_SCP_01.jsfx-inc</source>
        <source file="TiaR_Complex X Filter Synth/TiaR_SIN_01.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Complex%20X%20Filter%20Synth/TiaR_SIN_01.jsfx-inc</source>
      </version>
    </reapack>
    <reapack name="TiaR_Shepard Paradoxical Synth.jsfx" type="effect" desc="Shepard Paradoxical Synth">
      <metadata>
        <link rel="website">http://stash.reaper.fm/v/22090/TiaR_SHP_synth_00.zip</link>
      </metadata>
      <version name="1.02" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth.jsfx</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_ADSR_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_ADSR_03.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_KBD_03.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_KBD_03.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_LFO_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_LFO_00.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_LPF_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_LPF_00.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_SHP_02.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_SHP_02.jsfx-inc</source>
        <source file="TiaR_Shepard Paradoxical Synth/TiaR_SLD_00.jsfx-inc">https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Shepard%20Paradoxical%20Synth/TiaR_SLD_00.jsfx-inc</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze Cheesy Harmonic Synth.jsfx" type="effect" desc="Ze Cheesy Harmonic Synth">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 An additive synth based on Walsh functions\par}
}
]]></description>
      </metadata>
      <version name="0.2" author="T.Rochebois" time="2016-08-14T06:59:32Z">
        <changelog><![CDATA[+ improved keyboard (priority to last or highest note)
+ added    tremolo
+ added    ModWheel/Aftertouch vibrato depth
+ added    Pitch bend +- 1 octave
+ modified Seq gains can be negative (opposite phase)
+ modified Seq. init to fundamental seq]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Synth/TiaR_Ze%20Cheesy%20Harmonic%20Synth.jsfx</source>
      </version>
      <version name="0.3" author="T.Rochebois" time="2016-08-14T20:23:36Z">
        <changelog><![CDATA[# Note off bug corrected
+ improved keyboard (priority to last or highest note)
+ added    tremolo
+ added    ModWheel/Aftertouch vibrato depth
+ added    Pitch bend +- 1 octave
+ modified Seq gains can be negative (opposite phase)
+ modified Seq. init to fundamental seq]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f51e3fcc00cf854983cf470e67c0bfd1c6a935ec/Synth/TiaR_Ze%20Cheesy%20Harmonic%20Synth.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze DigiThArmOrgan.jsfx" type="effect" desc="Ze DigiThArmOrgan">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Ze DigiThArmOrgan\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This is a fully polyphonic synthesizer based on Digital Harmonics i.e. Walsh functions. It features 3 detuned oscillator and a two pole low pass filter per voice. It is antialiased by third order integration/differentiation scheme.\par}
}
]]></description>
      </metadata>
      <version name="0.1" author="T.Rochebois" time="2016-09-12T21:18:14Z">
        <changelog><![CDATA[version 0.1 first release 12th september 2016]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/f66440945bb5726d469f050032c6d37bf9f7ab59/Synth/TiaR_Ze%20DigiThArmOrgan.jsfx</source>
      </version>
    </reapack>
    <reapack name="TiaR_Ze Musette Organ.jsfx" type="effect" desc="Ze Musette Organ">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Ze Musette Organ\par}
{\pard \ql \f0 \sa180 \li0 \fi0 An {\b easy to use} jsfx instrument reminiscent of some italian electronic organs of the late 70s.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Features\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Full polyphony}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Smooth sound\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Five tone "characters"\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Adjustable "brilliance"\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Vibrato controlled by the Modulation Wheel and Aftertouch\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab +- one octave pitch bend\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Anti aliased sound generation\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Stackable:\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Many Ze Musette Organ can be stacked, their outputs will be added together.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab different Gain and Pan settings can be used to widden the stereo field.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab The keyboard range for every Musette Organ can be set with transition zones.\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Controls:\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Character\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Brilliance\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Pan and Gain\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Transposition/Detune\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Vibrato depth\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Velocity sensitivity\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Attack, Decay, Sustain and Release\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Keyboard range (Low and High notes and transition zones).\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Optional Extension of MIDI control (since version 1.2):\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Attack is controlled by CC 73\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Decay is controlled by CC 75\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Sustain is controlled by CC 76\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Release is controlled by CC 72\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Brilliance is controlled by CC 74\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Character is controlled by CC 71\sa180\sa180\sa180\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="T.Rochebois" time="2016-08-15T11:19:11Z">
        <changelog><![CDATA[+ ADSR enveloppe
+ Selectable velocity curve
# Brilliance and Character
+ modwheel Vibrato depth
+ After touch sensitive Vibrato speed
+ Pitch bend +-1 octave
+ Tremulant rate (detune between operators)
+ phase modulation synthesis (3 operators per note) 
+ Per note index limitation (anti aliasing)]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/b09371c49ff8d628d1d5cd7680ba906c5c6756b9/Synth/TiaR_Ze%20Musette%20Organ.jsfx</source>
      </version>
      <version name="1.1" author="T.Rochebois" time="2016-08-16T18:53:04Z">
        <changelog><![CDATA[# note off bug
+ ADSR enveloppe
+ Selectable velocity curve
# Brilliance and Character
+ modwheel Vibrato depth
+ After touch sensitive Vibrato speed
+ Pitch bend +-1 octave
+ Tremulant rate (detune between operators)
+ phase modulation synthesis (3 operators per note) 
+ Per note index limitation (anti aliasing)]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/86ab5336313da589bb54c8e2a42583fe827f1133/Synth/TiaR_Ze%20Musette%20Organ.jsfx</source>
      </version>
      <version name="1.2" author="T.Rochebois" time="2016-09-20T19:40:37Z">
        <changelog><![CDATA[version 1.2
# 4 New "Characters": Bell, Reed, Harmonica and Nasillard.
+ Velocity sensitive atteck time
+ MIDI control of A D S R Brilliance and Character (CC 73 75 76 72 74 and 71)
+ All notes off on play_state != 1 && play_state != 5
+ All notes off on "All Sounds Off" (CC 120)
version 1.1
# Off gate -20dB than before
version 1.02
+ ADSR enveloppe
+ Selectable velocity curve
# Brilliance and Character
+ modwheel Vibrato depth
+ After touch sensitive Vibrato speed
+ Pitch bend +-1 octave
+ Tremulant rate (detune between operators)
+ phase modulation synthesis (3 operators per note) 
+ Per note index limitation (anti aliasing)]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/b9dc7ab99b783fe5366863def0a9ef6798e67c06/Synth/TiaR_Ze%20Musette%20Organ.jsfx</source>
      </version>
    </reapack>
    <reapack name="TimeWaster_ReaRack Modular Synth.jsfx" type="effect" desc="ReaRack Modular Synth">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 ReaRack Modular Synth\par}
{\pard \ql \f0 \sa180 \li0 \fi0 ReaRack is a modular MIDI controlled digital synth system. There are currently eleven modules- Oscillator LFO Envelope Generator Filter Amplifier CC Mixer Key Follower Trigger Poly Splitter CC Sample and Hold Karplus-Strong Delay\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 User Guide\par}
{\pard \ql \f0 \sa180 \li0 \fi0 http://stash.reaper.fm/28621/ReaRack_Manual.pdf\par}
}
]]></description>
      </metadata>
      <version name="1.1" author="Malcolm Smith" time="2016-10-16T23:00:30Z">
        <changelog><![CDATA[See separate changelogs in each module]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/db23b7f8a766f430c03420e485b1b34415e40cb1/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Trigger.jsfx</source>
      </version>
      <version name="1.2" author="Malcolm Smith" time="2017-01-25T14:43:29Z">
        <changelog><![CDATA[See separate changelogs in each module]]></changelog>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Amplifier.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Amplifier.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack CCmixer.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20CCmixer.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack EnvGen.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20EnvGen.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Filter.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Filter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KSDelay.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KSDelay.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack KeyFollower.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20KeyFollower.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack LFO.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20LFO.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Oscillator.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Oscillator.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack PolySplitter.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20PolySplitter.jsfx</source>
        <source file="ReaRack Modular Synth/TimeWaster_ReaRack Trigger.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/TimeWaster_ReaRack%20Trigger.jsfx</source>
        <source file="ReaRack Modular Synth/Timewaster_ReaRack SampleAndHold.jsfx">https://github.com/ReaTeam/JSFX/raw/88b8c57c37d9d0b7209c6137dc161f033e6e6ff9/Synth/ReaRack%20Modular%20Synth/Timewaster_ReaRack%20SampleAndHold.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Utility">
    <reapack name="anomaly_Stero2SurroundRotator.jsfx" type="effect" desc="Stereo2Surround Rotator">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Stereo2Surround Rotator can be used to rotate stereo signal in surround space (Lf,Rf,Ls,Rs). It can be also used with 2-channel tracks to achieve leslie type special fx. Manual and automatic rotation modes. Also syncs with tempo. Additional crossover filter to split L & R into high and low frequency bands.\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="1.0" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Utility/anomaly_Stero2SurroundRotator.jsfx</source>
      </version>
    </reapack>
    <reapack name="anomaly_Surround Pan.jsfx" type="effect" desc="Surround Pan">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Surround Pan is a specialized panning plugin for distributing a stereo or mono signal into a 5.1 surround space. Stereo/mono to 5.1 panner. Supports automation. Several animation modes for source auto-positioning. Includes a user manual\par}
}
]]></description>
        <link rel="website">http://jsplugins.supermaailma.net/</link>
      </metadata>
      <version name="2.1" author="Stige T." time="2016-08-22T13:58:41Z">
        <changelog><![CDATA[Initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Utility/anomaly_Surround%20Pan.jsfx</source>
        <source file="anomaly_Surround Pan/Surround Pan.pdf">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Utility/anomaly_Surround%20Pan/Surround%20Pan.pdf</source>
        <source file="anomaly_Surround Pan/bg.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Utility/anomaly_Surround%20Pan/bg.png</source>
        <source file="anomaly_Surround Pan/radar.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Utility/anomaly_Surround%20Pan/radar.png</source>
        <source file="anomaly_Surround Pan/sliderknob.png">https://github.com/ReaTeam/JSFX/raw/9bf166d570602113cc4c070e4884558960f80f63/Utility/anomaly_Surround%20Pan/sliderknob.png</source>
      </version>
    </reapack>
    <reapack name="mschnell_MIDI Volume Control.jsfx" type="effect" desc="Midi Volume Control">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The midi CC values 0 ... 127 are mapped to an "amplifier" curve that consists of a linear and an exponential part in a way, that with CC = 0 the amplification is 0 (-inf dB) and with CC = 127 the amplification is 1 (0db).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A slider defines the amount (in dB), the amplification is reduced with each CC step.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 According to that, the breakpoint between the exponential and the linear part is set so that at this point the value and the slope of the curves match.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Below the breakpoint, a linear curve is used so that with CC = 0 the amplification is Zero (-infinity dB).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Another slider defines the maximum speed the amplification is modulated. This is set in dB per modulation step.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Moreover the maximum speed used is reaching a new defined level in as many steps a samples in a block.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A graph shows as well the curve (Amplification vs CC steps), as the dynamic movement of the amplification level.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Limitations\par}
{\pard \ql \f0 \sa180 \li0 \fi0 As due the the description above, the modulation speed is limited to reaching the target level in a timespan at least as the duration of a sample block, the current version of this plugin is not suitable for synth-like application that intend to implement a VCA.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2016-10-10T20:08:03Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/c8ab3584eea4e9532c9aa37eab1cfc5a5f9406b7/Utility/mschnell_MIDI%20Volume%20Control.jsfx</source>
      </version>
    </reapack>
    <reapack name="mschnell_Slider to Midi PS.jsfx" type="effect" desc="Slider to Midi PS">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 While the VST/Reaper-Plugin "MIDItoReaControlPath" can transfer live Midi data from a track to the "guts" of Reaper to be handled by Reaper Extensions and ReaScripts, Slider_to_Midi_PS is supposed to work the other way round and generate Midi messages in a track on request of Reaper Extensions (such as SWS "LiveConfigs") and ReaScripts. The Midi "Program Change" Messages can be used to switch the patch of appropriate plugins that internally hold a list of multiple patches (aka "programs", "sounds", "instruments"...) Whenever the "PS" slider is moved (manually or by a preset change), Slider to Midi PS sends out the appropriate Midi PS message exactly once. Slider to Midi PS passes through all midi messages it receives.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Main Purpose\par}
{\pard \ql \f0 \sa180 \li0 \fi0 With many VSTs (e.g. Kontakt), switching patches is a lot faster than loading a new preset for the VST itself. Moreover it preserves internal states, that would be reloaded with a new preset.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Usage\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The JSFX plugin "Slider to Midi PS" is placed in the track "above" plugin that is supposed to react on the program change request. Usually you statically set the Midi channel that the VST reacts to. Now (for each instance you created) you generate multiple presets, one for each program change (patch) number you want to send. With appropriate Reaper Actions / Scripts - or with SWS LiveConfigs - you can request a preset change for a Slider to Midi PS instance and hence a Midi PS Message will be generated in that track.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Possible Extension\par}
{\pard \ql \f0 \sa180 \li0 \fi0 It would be rather easy to extend the plugin to optionally send out CC ore Note On messages.\par}
}
]]></description>
        <link rel="donation" href="http://www.unfoundation.org/">United Nations Foundation</link>
      </metadata>
      <version name="1.0" author="Michael Schnell (mschnell@bschnell.de)" time="2016-10-21T17:50:51Z">
        <changelog><![CDATA[initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/ce5f775585f977c96e98aa22e6c7c557a12e48c5/Utility/mschnell_Slider%20to%20Midi%20PS.jsfx</source>
      </version>
    </reapack>
    <reapack name="nofish_Volume utility +-10db (sample accurate automation).jsfx" type="effect" desc="Volume utility +-10db (sample accurate automation)">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 simple volume adjustment utility modded from Cockos "Volume/Pan Smoother v5" JS I like to use this one for volume automation instead of Reaper's native volume envelope because\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab I rarely make changes > +- 10db so it gives me more 'resolution' in the envelope\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Reaper's fader are kept free for trim adjustments\sa180\par}
}
]]></description>
        <link rel="website">http://forum.cockos.com/member.php?u=6870</link>
      </metadata>
      <version name="1.0" author="Cockos, mod by nofish" time="2016-12-30T00:04:06Z">
        <changelog><![CDATA[version 1.0
+ initial release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/2e2341f8d03374a1b29eb2f12f25f751856266d0/Utility/nofish_Volume%20utility%20+-10db%20(sample%20accurate%20automation).jsfx</source>
      </version>
    </reapack>
    <reapack name="ReaperBlog_-12dB Dim.jsfx" type="effect" desc="-12dB Dim">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 No controls needed, shift-click the plugin from the mixer to disable.\line Insert on master as a secondary monitor reference level.\line Insert after a particularly loud plugin to get closer to sensible levels.\par}
}
]]></description>
      </metadata>
      <version name="1.0" author="The REAPER Blog" time="2016-08-08T14:07:30Z">
        <changelog><![CDATA[Initial Release]]></changelog>
        <source>https://github.com/ReaTeam/JSFX/raw/4a33bbe6110bf1c5f37430bf245bbd058512148e/Utility/ReaperBlog_-12dB%20Dim.jsfx</source>
      </version>
    </reapack>
  </category>
  <metadata>
    <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 ReaTeam JSFX Repository\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Community-maintained collection of JS effects for REAPER\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\field{\*\fldinst{HYPERLINK "https://travis-ci.org/ReaTeam/JSFX"}}{\fldrslt{\ul
{\cf1 [image: https://travis-ci.org/ReaTeam/JSFX.svg?branch=master]\cf0}
}}}
\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Contributors\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The JS effects in this repository were brought to you by these generous people:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\field{\*\fldinst{HYPERLINK "http://forum.cockos.com/member.php?u=6341"}}{\fldrslt{\ul
anomaly
}}}
 (Stige T) ({\field{\*\fldinst{HYPERLINK "http://jsplugins.supermaailma.net/plugins.php"}}{\fldrslt{\ul
website
}}}
)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\field{\*\fldinst{HYPERLINK "http://forum.cockos.com/member.php?u=15127"}}{\fldrslt{\ul
EpicSounds
}}}
 (The REAPER Blog/Jon Tidey) ({\field{\*\fldinst{HYPERLINK "http://reaperblog.net/"}}{\fldrslt{\ul
website
}}}
)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\field{\*\fldinst{HYPERLINK "http://forum.cockos.com/member.php?u=60721"}}{\fldrslt{\ul
mschnell
}}}
 (Michael Schnell)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\field{\*\fldinst{HYPERLINK "http://forum.cockos.com/member.php?u=92538"}}{\fldrslt{\ul
Smashed Transistors
}}}
 (TiaR)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\field{\*\fldinst{HYPERLINK "http://forum.cockos.com/member.php?u=63705"}}{\fldrslt{\ul
Time Waster
}}}
 (Malcolm Smith)\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Installation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Copy and paste this URL in Extensions > ReaPack > Import a repository:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 https://github.com/ReaTeam/JSFX/raw/master/index.xml\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Contributing\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Check out the {\field{\*\fldinst{HYPERLINK "https://github.com/cfillion/reapack-index/wiki/Examples"}}{\fldrslt{\ul
package examples
}}}
 and reapack-index's {\field{\*\fldinst{HYPERLINK "https://github.com/cfillion/reapack-index/wiki/Packaging-Documentation"}}{\fldrslt{\ul
packaging documentation
}}}
.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab {\field{\*\fldinst{HYPERLINK "https://github.com/ReaTeam/JSFX/new/master"}}{\fldrslt{\ul
Create
}}}
 a file for your effect named {\f1 Category Name/username_Name of the Effect.jsfx}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Click on "Propose new file" and create a Pull Request\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 3.\tx360\tab Wait for a team member to validate the request (it should be quick)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 4.\tx360\tab If everything is ok... it's done!\sa180\par}
}
]]></description>
  </metadata>
</index>
